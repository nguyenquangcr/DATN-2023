{"ast":null,"code":"import _asyncToGenerator from \"E:/meovathay/application/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"E:/meovathay/application/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"E:\\\\meovathay\\\\application\\\\pages\\\\post.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Fragment } from 'react';\nimport Link from 'next/link';\nimport classname from 'classnames';\nimport moment from 'moment';\nimport Carousel, { Modal, ModalGateway } from 'react-images'; // Components\n\nimport HorizontalWidget from 'Components/HorizontalWidget';\nimport SidebarNewsWidget from 'Components/SidebarNewsWidget';\nimport SimilarNewsWidget from 'Components/SimilarNewsWidget';\nimport SidebarHighlightWidget from 'Components/SidebarHighlightWidget'; // Services\n\nimport * as PostService from 'Services/Post/Info';\nimport * as PostCategoryService from 'Services/Post/Category'; // Actions\n\nimport { updateDocument, updateBreadcrumbStructure, setHeaderMenu } from '../store'; // Assets\n\nimport PageNotFound from 'Static/images/error-404.jpg';\nimport styles from 'Modules/Pages/Post/styles.module.scss'; // Utils\n\nimport Constant from 'Config/constant';\nimport { handleError, getObjectPropSafely, quoteDoubleToSingle } from 'Libs/utils';\nconst PATH = 'application/pages/post.jsx';\n\nclass Post extends React.Component {\n  static getInitialProps({\n    reduxStore,\n    query,\n    req\n  }) {\n    return _asyncToGenerator(function* () {\n      try {\n        let states = reduxStore.getState();\n        let pid = '';\n        let slug = '';\n        let menus = [];\n        let post = {};\n        let arrPostTagId = [];\n        let similarPosts = []; // Check post detail\n\n        if (query && query.slug && query.pid) {\n          pid = query.pid;\n          slug = query.slug;\n          let postService = PostService.get({\n            id: query.pid,\n            slug: query.slug\n          });\n\n          if (postService) {\n            yield postService.then(response => {\n              if (response && response.data && response.data.data && response.data.data.post) {\n                post = response.data.data.post; // Set document title\n\n                if (post.title) {\n                  let description = post.description ? quoteDoubleToSingle(post.description).trim() : '';\n                  let images = []; // Find tags of post\n\n                  if (post.tags && post.tags.length) {\n                    post.tags.map(tag => {\n                      if (tag.id) {\n                        arrPostTagId.push(tag.id);\n                      }\n                    });\n                  }\n\n                  if (post.background) {\n                    images = [post.background];\n                  } else if (post.images && post.images.normal) {\n                    images = [post.images.normal];\n                  } // Validate images\n\n\n                  if (images.length) {\n                    images = images.map(image => {\n                      if (image && image.indexOf('https:') < 0) {\n                        return 'https:' + image;\n                      }\n\n                      return image;\n                    });\n                  }\n\n                  let updatedTime = post.time && moment(post.time, 'YYYY-MM-DD HH:mm:ss').format(); // Update document metadata\n\n                  reduxStore.dispatch(updateDocument({\n                    canonical: post.href,\n                    alternate: post.href ? post.href.replace('meovathay.vn', 'm.meovathay.vn') : '',\n                    title: post.title,\n                    og: {\n                      title: post.title,\n                      description: description,\n                      images: images,\n                      updatedTime: updatedTime,\n                      url: post.href,\n                      tags: post.tags || []\n                    }\n                  })); // Update Breadcrumb structured data\n\n                  if (getObjectPropSafely(() => post.category.name) && getObjectPropSafely(() => post.category.shorten)) {\n                    const {\n                      name,\n                      shorten = '',\n                      id: cid\n                    } = post.category;\n                    const breadcrumbItem = {\n                      '@type': 'ListItem',\n                      'position': 1,\n                      'item': {\n                        '@id': Constant.SITE_URL + shorten + '-c' + cid + '.html',\n                        'name': name\n                      }\n                    };\n                    reduxStore.dispatch(updateBreadcrumbStructure({\n                      itemListElement: [breadcrumbItem]\n                    }));\n                  }\n                } // Menus\n\n\n                if (states && states.headerMenu) {\n                  const headerMenu = states.headerMenu;\n                  const {\n                    id: cid\n                  } = post.category;\n                  headerMenu.map(menu => {\n                    // Update header menu active\n                    menu.active = menu.id === +cid;\n\n                    if (menu.id === +cid) {\n                      // Set menus info\n                      menus = _objectSpread(_objectSpread({}, menu), {}, {\n                        active: true\n                      });\n                    } else if (menu.child) {\n                      menu.child.map(childMenu => {\n                        const active = childMenu.id === +cid;\n                        childMenu.active = active;\n\n                        if (active) {\n                          // Set menus info\n                          menus = _objectSpread({}, menu);\n                        }\n                      });\n                    }\n                  });\n                  reduxStore.dispatch(setHeaderMenu(headerMenu));\n                }\n              }\n            });\n          } // similar posts\n\n\n          let filters = [{\n            'pid': {\n              'does_not_matches_any': pid\n            },\n            'tags.id': {\n              'matches_any': arrPostTagId.join(',')\n            }\n          }];\n          let getSimilarPosts = PostCategoryService.getList({\n            filters: JSON.stringify(filters),\n            type: 'latest',\n            limit: 15,\n            page: 1\n          });\n\n          if (getSimilarPosts) {\n            yield getSimilarPosts.then(response => {\n              if (response && response.data && response.data.data && response.data.data.posts) {\n                similarPosts = response.data.data.posts;\n              }\n            });\n          }\n        }\n\n        return {\n          menus,\n          pid,\n          slug,\n          post,\n          similarPosts\n        };\n      } catch (error) {\n        // Error\n        handleError(error, {\n          actionName: 'getInitialProps',\n          path: PATH,\n          args: {\n            req\n          }\n        });\n      }\n    })();\n  }\n\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleImages\", () => {\n      try {\n        if (this.myRef && this.myRef.current) {\n          let images = []; // Attachment images\n\n          let attachmentFigure = this.myRef.current.getElementsByTagName('figure');\n\n          if (attachmentFigure && attachmentFigure.length) {\n            for (let i = 0; i < attachmentFigure.length; i++) {\n              if (attachmentFigure[i].classList.contains('attachment-image') || attachmentFigure[i].classList.contains('attachment-album-item')) {\n                let image = attachmentFigure[i].getElementsByTagName('img');\n\n                if (image && image.length) {\n                  let src = image[0].getAttribute('data-src');\n\n                  if (!src) {\n                    src = image[0].getAttribute('src');\n                  }\n\n                  let alt = image[0].getAttribute('alt');\n                  image[0].addEventListener('click', () => {\n                    this.setState({\n                      lightbox: _objectSpread(_objectSpread({}, this.state.lightbox), {}, {\n                        isOpen: true,\n                        photoIndex: i\n                      })\n                    });\n                  });\n\n                  if (src) {\n                    images.push({\n                      src: src,\n                      title: alt\n                    });\n                  }\n                }\n              }\n            }\n          }\n\n          if (images.length) {\n            this.setState({\n              lightbox: _objectSpread(_objectSpread({}, this.state.lightbox), {}, {\n                photos: images\n              })\n            });\n          } // Attachment album\n\n\n          let attachmentAlbums = this.myRef.current.getElementsByClassName('attachment-album');\n\n          if (attachmentAlbums && attachmentAlbums.length) {\n            for (let i = 0; i < attachmentAlbums.length; i++) {\n              let attachmentAlbumRow = attachmentAlbums[i].getElementsByClassName('attachment-album-row');\n\n              if (attachmentAlbumRow.length) {\n                for (let j = 0; j < attachmentAlbumRow.length; j++) {\n                  this.handleAlbumDimensions(attachmentAlbumRow);\n                }\n              }\n            }\n          }\n        }\n      } catch (error) {\n        // Error\n        handleError(error, {\n          actionName: 'handleImages',\n          path: PATH,\n          args: {}\n        });\n      }\n    });\n\n    _defineProperty(this, \"handleAlbumDimensions\", albumRow => {\n      try {\n        if (albumRow && albumRow.length) {\n          for (let i = 0; i < albumRow.length; i++) {\n            let albumHeight = albumRow[i].getAttribute('height');\n            let images = albumRow[i].getElementsByTagName('img');\n            let intervalTime = [];\n            let intervalCount = 0;\n\n            if (!albumHeight && images.length) {\n              intervalTime[i] = setInterval(() => {\n                intervalCount++;\n                let minHeight = 0; // Clear interval\n\n                if (intervalCount > 10) {\n                  clearInterval(intervalTime[i]);\n                }\n\n                for (let j = 0; j < images.length; j++) {\n                  if (images[j].complete) {\n                    clearInterval(intervalTime[i]);\n\n                    if (minHeight <= 0 || minHeight > images[j].height) {\n                      minHeight = +images[j].height;\n                    }\n                  }\n                }\n\n                if (minHeight > 0) {\n                  albumRow[i].setAttribute('height', minHeight + 'px');\n                  albumRow[i].style.height = minHeight + 'px';\n                }\n              }, 500);\n            }\n          }\n        }\n      } catch (error) {\n        // Error\n        handleError(error, {\n          actionName: 'handleAlbumDimensions',\n          path: PATH,\n          args: {}\n        });\n      }\n    });\n\n    _defineProperty(this, \"getLatestPosts\", () => {\n      try {\n        const {\n          category\n        } = this.props.post;\n        const {\n          shorten\n        } = category;\n\n        if (shorten) {\n          let filters = [{\n            'pid': {\n              'does_not_matches_any': this.props.pid\n            }\n          }];\n          let getPosts = PostCategoryService.getList({\n            filters: JSON.stringify(filters),\n            type: 'latest',\n            page: 1\n          });\n\n          if (getPosts) {\n            getPosts.then(response => {\n              if (response && response.data && response.data.data && response.data.data.posts) {\n                let posts = response.data.data.posts;\n                this.setState({\n                  latestPosts: posts\n                });\n              }\n            });\n          }\n        }\n      } catch (error) {\n        // Error\n        handleError(error, {\n          actionName: 'getLatestPosts',\n          path: PATH,\n          args: {}\n        });\n      }\n    });\n\n    _defineProperty(this, \"getCategorySimilarPosts\", () => {\n      try {\n        const {\n          category\n        } = this.props.post;\n        const {\n          shorten\n        } = category;\n\n        if (shorten) {\n          let filters = [{\n            'pid': {\n              'does_not_matches_any': this.props.pid\n            }\n          }];\n          let getPosts = PostCategoryService.getList({\n            filters: JSON.stringify(filters),\n            slug: shorten,\n            type: 'latest',\n            page: 1\n          });\n\n          if (getPosts) {\n            getPosts.then(response => {\n              if (response && response.data && response.data.data && response.data.data.posts) {\n                let posts = response.data.data.posts;\n                this.setState({\n                  categorySimilarPosts: posts\n                });\n              }\n            });\n          }\n        }\n      } catch (error) {\n        handleError(error, {\n          actionName: 'getCategorySimilarPosts',\n          path: PATH,\n          args: {}\n        });\n      }\n    });\n\n    _defineProperty(this, \"onCloseLightbox\", () => {\n      try {\n        this.setState({\n          lightbox: _objectSpread(_objectSpread({}, this.state.lightbox), {}, {\n            isOpen: false\n          })\n        });\n      } catch (error) {\n        // Error\n        handleError(error, {\n          actionName: 'onCloseLightbox',\n          path: PATH,\n          args: {}\n        });\n      }\n    });\n\n    _defineProperty(this, \"renderSubMenu\", () => {\n      try {\n        const {\n          menus = {},\n          post\n        } = this.props;\n        let arrMenus = [{\n          id: menus.id,\n          name: menus.name,\n          slug: menus.slug,\n          active: post.category && post.category.id && menus.id === post.category.id\n        }];\n\n        if (menus.child && menus.child.length) {\n          arrMenus = arrMenus.concat(menus.child);\n        }\n\n        if (arrMenus && arrMenus.length) {\n          return __jsx(\"ul\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 518,\n              columnNumber: 21\n            }\n          }, arrMenus.map(menu => {\n            return __jsx(\"li\", {\n              key: menu.id,\n              className: classname({\n                'active': menu.active\n              }),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 522,\n                columnNumber: 37\n              }\n            }, __jsx(Link, {\n              href: '/category-by-id?slug=' + menu.slug + '&cid=' + menu.id,\n              as: '/' + menu.slug + '-c' + menu.id + '.html',\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 523,\n                columnNumber: 41\n              }\n            }, __jsx(\"a\", {\n              title: menu.name,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 524,\n                columnNumber: 45\n              }\n            }, menu.name)));\n          }));\n        }\n\n        return null;\n      } catch (error) {\n        handleError(error, {\n          actionName: 'renderSubMenu',\n          path: PATH,\n          args: {}\n        });\n      }\n    });\n\n    this.state = {\n      pid: props.pid,\n      slug: props.slug,\n      isShowBackground: false,\n      // Show background when post content not exist image element\n      latestPosts: [],\n      categorySimilarPosts: [],\n      lightbox: {\n        isOpen: false,\n        photoIndex: 0\n      }\n    };\n    this.myRef = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    try {\n      this.handleImages(); // Latest posts\n\n      this.getLatestPosts(); // Latest category similar posts\n\n      this.getCategorySimilarPosts();\n    } catch (error) {\n      // Error\n      handleError(error, {\n        actionName: 'componentDidMount',\n        path: PATH,\n        args: {}\n      });\n    }\n  }\n\n  componentDidUpdate() {\n    try {\n      if (this.props.pid !== this.state.pid && this.props.slug !== this.state.slug) {\n        this.setState({\n          pid: this.props.pid,\n          slug: this.props.slug\n        }, () => {\n          this.handleImages(); // Latest posts\n\n          this.getLatestPosts(); // Latest category similar posts\n\n          this.getCategorySimilarPosts();\n        });\n      }\n    } catch (error) {\n      handleError(error, {\n        actionName: 'componentDidUpdate',\n        path: PATH,\n        args: {}\n      });\n    }\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // Error\n    handleError(error, {\n      actionName: 'componentDidCatch',\n      path: PATH,\n      args: {\n        errorInfo\n      }\n    });\n  }\n\n  render() {\n    const {\n      similarPosts,\n      post = {}\n    } = this.props;\n    let {\n      isOpen,\n      photoIndex,\n      photos\n    } = this.state.lightbox;\n    return __jsx(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 13\n      }\n    }, \"jkbndswjkvnbdsajkvnbsdejkvbndsjkvb\", __jsx(\"div\", {\n      ref: this.myRef,\n      className: classname('container', styles['container']),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 17\n      }\n    }, post && post.title ? __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: \"sub-navbar\",\n      style: {\n        background: '#fff'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 33\n      }\n    }, __jsx(\"div\", {\n      className: classname('clearfix w1040'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 37\n      }\n    }, this.renderSubMenu())), __jsx(\"div\", {\n      className: classname(styles['container-body'], 'container-body clearfix w1040'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 33\n      }\n    }, __jsx(\"div\", {\n      className: classname('clearfix w1040'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 561,\n        columnNumber: 37\n      }\n    }, __jsx(\"div\", {\n      className: classname(styles['post-wrapper'], 'container-left fl w720'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 41\n      }\n    }, __jsx(\"h1\", {\n      className: classname(styles['post-title']),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 45\n      }\n    }, post.title), __jsx(\"div\", {\n      className: classname(styles['meta-source']),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 45\n      }\n    }, __jsx(\"span\", {\n      className: classname(styles['source']),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 49\n      }\n    }, \"THEO \", post.sourceName ? post.sourceName : 'VNEXPRESS'), __jsx(\"span\", {\n      className: classname(styles['time']),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 49\n      }\n    }, __jsx(\"i\", {\n      className: \"fa fa-clock-o\",\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 93\n      }\n    }), \" \", post.time ? moment(post.time, 'YYYY-MM-DD HH:mm:ss').format('DD-MM-YYYY HH:mm:ss') : '21-09-2019 12:27:40')), __jsx(\"div\", {\n      className: classname(styles['socials']),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 568,\n        columnNumber: 45\n      }\n    }), __jsx(\"div\", {\n      className: classname(styles['post-content'], 'post-content'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 45\n      }\n    }, __jsx(\"div\", {\n      className: classname(styles['post-menu-navbar']),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 49\n      }\n    }, __jsx(\"div\", {\n      className: classname(styles['go-to-home']),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 53\n      }\n    }, __jsx(Link, {\n      href: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 57\n      }\n    }, __jsx(\"a\", {\n      title: \"Trang ch\\u1EE7\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 573,\n        columnNumber: 61\n      }\n    }, __jsx(\"span\", {\n      className: \"icon-home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 574,\n        columnNumber: 65\n      }\n    })))), __jsx(\"div\", {\n      className: classname(styles['share-facebook']),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 53\n      }\n    }, __jsx(\"a\", {\n      ref: 'nofollow',\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      title: \"Chia s\\u1EBB b\\xE0i vi\\u1EBFt l\\xEAn Facebook\",\n      href: 'https://www.facebook.com/sharer/sharer.php?u=' + post.href,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 57\n      }\n    }, __jsx(\"span\", {\n      className: \"icon-facebook\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 584,\n        columnNumber: 61\n      }\n    }))), __jsx(\"div\", {\n      className: classname(styles['go-back']),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 587,\n        columnNumber: 53\n      }\n    }, __jsx(Link, {\n      href: '/category-by-id?slug=' + post.category.shorten + '&cid=' + post.category.id,\n      as: '/' + post.category.shorten + '-c' + post.category.id + '.html',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 588,\n        columnNumber: 57\n      }\n    }, __jsx(\"a\", {\n      title: post.category ? 'Trở về ' + post.category.name : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 589,\n        columnNumber: 61\n      }\n    }, __jsx(\"span\", {\n      className: \"icon-undo2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 65\n      }\n    }))))), __jsx(\"h2\", {\n      className: classname(styles['post-description']),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 595,\n        columnNumber: 49\n      }\n    }, post.description), this.state.isShowBackground && post.background ? __jsx(\"div\", {\n      className: classname(styles['post-background']),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 598,\n        columnNumber: 57\n      }\n    }, __jsx(\"img\", {\n      alt: post.title,\n      src: post.background,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 599,\n        columnNumber: 61\n      }\n    })) : null, __jsx(\"div\", {\n      className: classname(styles['post-container']),\n      dangerouslySetInnerHTML: {\n        __html: post.content\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 604,\n        columnNumber: 49\n      }\n    }), __jsx(\"div\", {\n      className: \"clearfix\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 606,\n        columnNumber: 49\n      }\n    }, __jsx(\"div\", {\n      className: classname(styles['post-source']),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 607,\n        columnNumber: 53\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 608,\n        columnNumber: 57\n      }\n    }, \"Theo \", __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 608,\n        columnNumber: 67\n      }\n    }, post.sourceName ? post.sourceName : 'VNEXPRESS'))), __jsx(\"div\", {\n      className: classname(styles['post-share']),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 53\n      }\n    }))), post.tags && post.tags.length ? __jsx(\"div\", {\n      className: classname(styles['post-tags'], 'clearfix'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 53\n      }\n    }, __jsx(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 616,\n        columnNumber: 57\n      }\n    }, post.tags.map((tag, index) => {\n      return __jsx(\"li\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 620,\n          columnNumber: 73\n        }\n      }, __jsx(Link, {\n        href: '/tag?slug=' + tag.slug,\n        as: '/' + tag.slug + '.html',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 621,\n          columnNumber: 77\n        }\n      }, __jsx(\"a\", {\n        title: tag.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 622,\n          columnNumber: 81\n        }\n      }, \"#\", tag.name)));\n    }))) : null), __jsx(\"div\", {\n      className: classname('container-right col-sticky fr mt-20 w300'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 633,\n        columnNumber: 41\n      }\n    }, similarPosts && similarPosts.length ? __jsx(SidebarHighlightWidget, {\n      key: this.props.post.pid,\n      className: \"col-sticky\",\n      title: \"B\\xE0i vi\\u1EBFt li\\xEAn quan\",\n      background: 'normal',\n      posts: similarPosts,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 636,\n        columnNumber: 53\n      }\n    }) : null)), __jsx(\"div\", {\n      className: classname('clearfix w1040'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 647,\n        columnNumber: 37\n      }\n    }, __jsx(\"div\", {\n      className: classname(styles['post-wrapper'], 'container-left fl w720'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 648,\n        columnNumber: 41\n      }\n    }, __jsx(\"div\", {\n      className: classname(styles['post-related']),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 649,\n        columnNumber: 45\n      }\n    }, similarPosts.length >= 4 ? __jsx(SimilarNewsWidget, {\n      key: this.props.post.pid,\n      title: \"B\\xE0i vi\\u1EBFt li\\xEAn quan\",\n      background: 'normal',\n      posts: similarPosts.filter((post, key) => key > 0),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 652,\n        columnNumber: 57\n      }\n    }) : null, this.state.categorySimilarPosts.length ? __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: classname(styles['post-related-title']),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 664,\n        columnNumber: 61\n      }\n    }, \"Tin m\\u1EDBi c\\xF9ng chuy\\xEAn m\\u1EE5c\"), __jsx(HorizontalWidget, {\n      skeletonLoading: !this.state.categorySimilarPosts.length,\n      background: 'normal',\n      posts: this.state.categorySimilarPosts,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 665,\n        columnNumber: 61\n      }\n    })) : null)), __jsx(\"div\", {\n      className: classname('container-right col-sticky fr mt-20 w300'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 675,\n        columnNumber: 41\n      }\n    }, __jsx(SidebarNewsWidget, {\n      skeletonLoading: !this.state.latestPosts.length,\n      title: \"B\\xE0i vi\\u1EBFt m\\u1EDBi nh\\u1EA5t\",\n      background: 'medium',\n      posts: this.state.latestPosts,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 676,\n        columnNumber: 45\n      }\n    })))), __jsx(ModalGateway, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 686,\n        columnNumber: 33\n      }\n    }, isOpen ? __jsx(Modal, {\n      onClose: this.onCloseLightbox,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 689,\n        columnNumber: 45\n      }\n    }, __jsx(Carousel, {\n      currentIndex: photoIndex,\n      views: photos.map(x => _objectSpread(_objectSpread({}, x), {}, {\n        srcset: x.srcSet,\n        caption: x.title\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 690,\n        columnNumber: 49\n      }\n    })) : null)) : __jsx(\"div\", {\n      className: classname(styles['post-not-found'], 'w1040'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 704,\n        columnNumber: 29\n      }\n    }, __jsx(\"img\", {\n      alt: \"Page not found\",\n      src: PageNotFound,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 705,\n        columnNumber: 33\n      }\n    }), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 706,\n        columnNumber: 33\n      }\n    }, \"Xin l\\u1ED7i b\\u1EA1n, ch\\xFAng t\\xF4i kh\\xF4ng t\\xECm th\\u1EA5y b\\xE0i vi\\u1EBFt n\\xE0y. \", __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 706,\n        columnNumber: 88\n      }\n    }), \" M\\u1EDDi b\\u1EA1n quay v\\u1EC1 trang ch\\u1EE7 \\u0111\\u1EC3 xem nh\\u1EEFng tin t\\u1EE9c m\\u1EDBi nh\\u1EA5t.\"), __jsx(Link, {\n      href: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 707,\n        columnNumber: 33\n      }\n    }, __jsx(\"a\", {\n      title: \"Tr\\u1EDF v\\u1EC1 trang ch\\u1EE7\",\n      className: classname(styles['go-back-to-home']),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 708,\n        columnNumber: 37\n      }\n    }, \"Tr\\u1EDF v\\u1EC1 trang ch\\u1EE7\")))));\n  }\n\n}\n\nexport default Post;","map":{"version":3,"sources":["E:/meovathay/application/pages/post.jsx"],"names":["React","Fragment","Link","classname","moment","Carousel","Modal","ModalGateway","HorizontalWidget","SidebarNewsWidget","SimilarNewsWidget","SidebarHighlightWidget","PostService","PostCategoryService","updateDocument","updateBreadcrumbStructure","setHeaderMenu","PageNotFound","styles","Constant","handleError","getObjectPropSafely","quoteDoubleToSingle","PATH","Post","Component","getInitialProps","reduxStore","query","req","states","getState","pid","slug","menus","post","arrPostTagId","similarPosts","postService","get","id","then","response","data","title","description","trim","images","tags","length","map","tag","push","background","normal","image","indexOf","updatedTime","time","format","dispatch","canonical","href","alternate","replace","og","url","category","name","shorten","cid","breadcrumbItem","SITE_URL","itemListElement","headerMenu","menu","active","child","childMenu","filters","join","getSimilarPosts","getList","JSON","stringify","type","limit","page","posts","error","actionName","path","args","constructor","props","myRef","current","attachmentFigure","getElementsByTagName","i","classList","contains","src","getAttribute","alt","addEventListener","setState","lightbox","state","isOpen","photoIndex","photos","attachmentAlbums","getElementsByClassName","attachmentAlbumRow","j","handleAlbumDimensions","albumRow","albumHeight","intervalTime","intervalCount","setInterval","minHeight","clearInterval","complete","height","setAttribute","style","getPosts","latestPosts","categorySimilarPosts","arrMenus","concat","isShowBackground","createRef","componentDidMount","handleImages","getLatestPosts","getCategorySimilarPosts","componentDidUpdate","componentDidCatch","errorInfo","render","renderSubMenu","sourceName","__html","content","index","filter","key","onCloseLightbox","x","srcset","srcSet","caption"],"mappings":"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","sourcesContent":["import React, {Fragment} from 'react';\r\nimport Link from 'next/link';\r\nimport classname from 'classnames';\r\nimport moment from 'moment';\r\nimport Carousel, {Modal, ModalGateway} from 'react-images';\r\n\r\n// Components\r\nimport HorizontalWidget from 'Components/HorizontalWidget';\r\nimport SidebarNewsWidget from 'Components/SidebarNewsWidget';\r\nimport SimilarNewsWidget from 'Components/SimilarNewsWidget';\r\nimport SidebarHighlightWidget from 'Components/SidebarHighlightWidget';\r\n\r\n// Services\r\nimport * as PostService from 'Services/Post/Info';\r\nimport * as PostCategoryService from 'Services/Post/Category';\r\n\r\n// Actions\r\nimport {updateDocument, updateBreadcrumbStructure, setHeaderMenu} from '../store';\r\n\r\n// Assets\r\nimport PageNotFound from 'Static/images/error-404.jpg';\r\nimport styles from 'Modules/Pages/Post/styles.module.scss';\r\n\r\n// Utils\r\nimport Constant from 'Config/constant';\r\nimport {handleError, getObjectPropSafely, quoteDoubleToSingle} from 'Libs/utils';\r\n\r\nconst PATH = 'application/pages/post.jsx';\r\n\r\nclass Post extends React.Component {\r\n    static async getInitialProps({reduxStore, query, req}) {\r\n        try {\r\n            let states = reduxStore.getState();\r\n            let pid = '';\r\n            let slug = '';\r\n            let menus = [];\r\n            let post = {};\r\n            let arrPostTagId = [];\r\n            let similarPosts = [];\r\n\r\n            // Check post detail\r\n            if (query && query.slug && query.pid) {\r\n                pid = query.pid;\r\n                slug = query.slug;\r\n\r\n                let postService = PostService.get({\r\n                    id: query.pid,\r\n                    slug: query.slug\r\n                });\r\n\r\n                if (postService) {\r\n                    await postService.then((response) => {\r\n                        if (response && response.data && response.data.data && response.data.data.post) {\r\n                            post = response.data.data.post;\r\n\r\n                            // Set document title\r\n                            if (post.title) {\r\n                                let description = post.description ? quoteDoubleToSingle(post.description).trim() : '';\r\n                                let images = [];\r\n\r\n                                // Find tags of post\r\n                                if (post.tags && post.tags.length) {\r\n                                    post.tags.map((tag) => {\r\n                                        if (tag.id) {\r\n                                            arrPostTagId.push(tag.id);\r\n                                        }\r\n                                    });\r\n                                }\r\n\r\n                                if (post.background) {\r\n                                    images = [post.background];\r\n                                } else if (post.images && post.images.normal) {\r\n                                    images = [post.images.normal];\r\n                                }\r\n\r\n                                // Validate images\r\n                                if (images.length) {\r\n                                    images = images.map((image) => {\r\n                                        if (image && image.indexOf('https:') < 0) {\r\n                                            return 'https:' + image;\r\n                                        }\r\n\r\n                                        return image;\r\n                                    });\r\n                                }\r\n\r\n                                let updatedTime = post.time && moment(post.time, 'YYYY-MM-DD HH:mm:ss').format();\r\n\r\n                                // Update document metadata\r\n                                reduxStore.dispatch(updateDocument({\r\n                                    canonical: post.href,\r\n                                    alternate: post.href ? post.href.replace('meovathay.vn', 'm.meovathay.vn') : '',\r\n                                    title: post.title,\r\n                                    og: {\r\n                                        title: post.title,\r\n                                        description: description,\r\n                                        images: images,\r\n                                        updatedTime: updatedTime,\r\n                                        url: post.href,\r\n                                        tags: post.tags || []\r\n                                    }\r\n                                }));\r\n\r\n                                // Update Breadcrumb structured data\r\n                                if (getObjectPropSafely(() => post.category.name) && getObjectPropSafely(() => post.category.shorten)) {\r\n                                    const {name, shorten = '', id: cid} = post.category;\r\n\r\n                                    const breadcrumbItem = {\r\n                                        '@type': 'ListItem',\r\n                                        'position': 1,\r\n                                        'item': {\r\n                                            '@id': Constant.SITE_URL + shorten + '-c'  + cid + '.html',\r\n                                            'name': name\r\n                                        }\r\n                                    };\r\n\r\n                                    reduxStore.dispatch(updateBreadcrumbStructure({\r\n                                        itemListElement: [breadcrumbItem]\r\n                                    }));\r\n                                }\r\n                            }\r\n\r\n                            // Menus\r\n                            if (states && states.headerMenu) {\r\n                                const headerMenu = states.headerMenu;\r\n                                const {id: cid} = post.category;\r\n\r\n                                headerMenu.map((menu) => {\r\n                                    // Update header menu active\r\n                                    menu.active = menu.id === +cid;\r\n\r\n                                    if (menu.id === +cid) {\r\n                                        // Set menus info\r\n                                        menus = {\r\n                                            ...menu,\r\n                                            active: true\r\n                                        };\r\n                                    } else if (menu.child) {\r\n                                        menu.child.map((childMenu) => {\r\n                                            const active = childMenu.id === +cid;\r\n\r\n                                            childMenu.active = active;\r\n\r\n                                            if (active) {\r\n                                                // Set menus info\r\n                                                menus = {\r\n                                                    ...menu\r\n                                                };\r\n                                            }\r\n                                        });\r\n                                    }\r\n                                });\r\n\r\n                                reduxStore.dispatch(setHeaderMenu(headerMenu));\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n\r\n                // similar posts\r\n                let filters = [\r\n                    {\r\n                        'pid': {\r\n                            'does_not_matches_any': pid\r\n                        },\r\n                        'tags.id': {\r\n                            'matches_any': arrPostTagId.join(',')\r\n                        }\r\n                    }\r\n                ];\r\n\r\n                let getSimilarPosts = PostCategoryService.getList({\r\n                    filters: JSON.stringify(filters),\r\n                    type: 'latest',\r\n                    limit: 15,\r\n                    page: 1\r\n                });\r\n\r\n                if (getSimilarPosts) {\r\n                    await getSimilarPosts.then((response) => {\r\n                        if (response && response.data && response.data.data && response.data.data.posts) {\r\n                            similarPosts = response.data.data.posts;\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n            return {menus, pid, slug, post, similarPosts};\r\n        } catch (error) {\r\n            // Error\r\n            handleError(error, {\r\n                actionName: 'getInitialProps',\r\n                path: PATH,\r\n                args: {\r\n                    req\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pid: props.pid,\r\n            slug: props.slug,\r\n            isShowBackground: false, // Show background when post content not exist image element\r\n            latestPosts: [],\r\n            categorySimilarPosts: [],\r\n            lightbox: {\r\n                isOpen: false,\r\n                photoIndex: 0\r\n            }\r\n        };\r\n\r\n        this.myRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        try {\r\n            this.handleImages();\r\n\r\n            // Latest posts\r\n            this.getLatestPosts();\r\n\r\n            // Latest category similar posts\r\n            this.getCategorySimilarPosts();\r\n        } catch (error) {\r\n            // Error\r\n            handleError(error, {\r\n                actionName: 'componentDidMount',\r\n                path: PATH,\r\n                args: {}\r\n            });\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        try {\r\n            if (this.props.pid !== this.state.pid && this.props.slug !== this.state.slug) {\r\n                this.setState({\r\n                    pid: this.props.pid,\r\n                    slug: this.props.slug\r\n                }, () => {\r\n                    this.handleImages();\r\n\r\n                    // Latest posts\r\n                    this.getLatestPosts();\r\n\r\n                    // Latest category similar posts\r\n                    this.getCategorySimilarPosts();\r\n                });\r\n            }\r\n        } catch (error) {\r\n            handleError(error, {\r\n                actionName: 'componentDidUpdate',\r\n                path: PATH,\r\n                args: {}\r\n            });\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        // Error\r\n        handleError(error, {\r\n            actionName: 'componentDidCatch',\r\n            path: PATH,\r\n            args: {\r\n                errorInfo\r\n            }\r\n        });\r\n    }\r\n\r\n    handleImages = () => {\r\n        try {\r\n            if (this.myRef && this.myRef.current) {\r\n                let images = [];\r\n\r\n                // Attachment images\r\n                let attachmentFigure = this.myRef.current.getElementsByTagName('figure');\r\n\r\n                if (attachmentFigure && attachmentFigure.length) {\r\n                    for (let i = 0; i < attachmentFigure.length; i++) {\r\n                        if (attachmentFigure[i].classList.contains('attachment-image') || attachmentFigure[i].classList.contains('attachment-album-item')) {\r\n                            let image = attachmentFigure[i].getElementsByTagName('img');\r\n\r\n                            if (image && image.length) {\r\n                                let src = image[0].getAttribute('data-src');\r\n\r\n                                if (!src) {\r\n                                    src = image[0].getAttribute('src');\r\n                                }\r\n\r\n                                let alt = image[0].getAttribute('alt');\r\n\r\n                                image[0].addEventListener('click', () => {\r\n                                    this.setState({\r\n                                        lightbox: {\r\n                                            ...this.state.lightbox,\r\n                                            isOpen: true,\r\n                                            photoIndex: i\r\n                                        }\r\n                                    });\r\n                                });\r\n\r\n                                if (src) {\r\n                                    images.push({\r\n                                        src: src,\r\n                                        title: alt\r\n                                    });\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (images.length) {\r\n                    this.setState({\r\n                        lightbox: {\r\n                            ...this.state.lightbox,\r\n                            photos: images\r\n                        }\r\n                    });\r\n                }\r\n\r\n                // Attachment album\r\n                let attachmentAlbums = this.myRef.current.getElementsByClassName('attachment-album');\r\n\r\n                if (attachmentAlbums && attachmentAlbums.length) {\r\n                    for (let i = 0; i < attachmentAlbums.length; i++) {\r\n                        let attachmentAlbumRow = attachmentAlbums[i].getElementsByClassName('attachment-album-row');\r\n\r\n                        if (attachmentAlbumRow.length) {\r\n                            for (let j = 0; j < attachmentAlbumRow.length; j++) {\r\n                                this.handleAlbumDimensions(attachmentAlbumRow);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } catch (error) {\r\n            // Error\r\n            handleError(error, {\r\n                actionName: 'handleImages',\r\n                path: PATH,\r\n                args: {}\r\n            });\r\n        }\r\n    }\r\n\r\n    handleAlbumDimensions = (albumRow) => {\r\n        try {\r\n            if (albumRow && albumRow.length) {\r\n                for (let i = 0; i < albumRow.length; i++) {\r\n                    let albumHeight = albumRow[i].getAttribute('height');\r\n                    let images = albumRow[i].getElementsByTagName('img');\r\n                    let intervalTime = [];\r\n                    let intervalCount = 0;\r\n\r\n                    if (!albumHeight && images.length) {\r\n                        intervalTime[i] = setInterval(() => {\r\n                            intervalCount++;\r\n                            let minHeight = 0;\r\n\r\n                            // Clear interval\r\n                            if (intervalCount > 10) {\r\n                                clearInterval(intervalTime[i]);\r\n                            }\r\n\r\n                            for (let j = 0; j < images.length; j++) {\r\n                                if (images[j].complete) {\r\n                                    clearInterval(intervalTime[i]);\r\n\r\n                                    if (minHeight <= 0 || (minHeight > images[j].height)) {\r\n                                        minHeight = +images[j].height;\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            if (minHeight > 0) {\r\n                                albumRow[i].setAttribute('height', minHeight + 'px');\r\n                                albumRow[i].style.height = minHeight + 'px';\r\n                            }\r\n                        }, 500);\r\n                    }\r\n                }\r\n            }\r\n        } catch (error) {\r\n            // Error\r\n            handleError(error, {\r\n                actionName: 'handleAlbumDimensions',\r\n                path: PATH,\r\n                args: {}\r\n            });\r\n        }\r\n    }\r\n\r\n    getLatestPosts = () => {\r\n        try {\r\n            const {category} = this.props.post;\r\n            const {shorten} = category;\r\n\r\n            if (shorten) {\r\n                let filters = [\r\n                    {\r\n                        'pid': {\r\n                            'does_not_matches_any': this.props.pid\r\n                        }\r\n                    }\r\n                ];\r\n\r\n                let getPosts = PostCategoryService.getList({\r\n                    filters: JSON.stringify(filters),\r\n                    type: 'latest',\r\n                    page: 1\r\n                });\r\n\r\n                if (getPosts) {\r\n                    getPosts.then((response) => {\r\n                        if (response && response.data && response.data.data && response.data.data.posts) {\r\n                            let posts = response.data.data.posts;\r\n\r\n                            this.setState({\r\n                                latestPosts: posts\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        } catch (error) {\r\n            // Error\r\n            handleError(error, {\r\n                actionName: 'getLatestPosts',\r\n                path: PATH,\r\n                args: {}\r\n            });\r\n        }\r\n    }\r\n\r\n    getCategorySimilarPosts = () => {\r\n        try {\r\n            const {category} = this.props.post;\r\n            const {shorten} = category;\r\n\r\n            if (shorten) {\r\n                let filters = [\r\n                    {\r\n                        'pid': {\r\n                            'does_not_matches_any': this.props.pid\r\n                        }\r\n                    }\r\n                ];\r\n\r\n                let getPosts = PostCategoryService.getList({\r\n                    filters: JSON.stringify(filters),\r\n                    slug: shorten,\r\n                    type: 'latest',\r\n                    page: 1\r\n                });\r\n\r\n                if (getPosts) {\r\n                    getPosts.then((response) => {\r\n                        if (response && response.data && response.data.data && response.data.data.posts) {\r\n                            let posts = response.data.data.posts;\r\n\r\n                            this.setState({\r\n                                categorySimilarPosts: posts\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        } catch (error) {\r\n            handleError(error, {\r\n                actionName: 'getCategorySimilarPosts',\r\n                path: PATH,\r\n                args: {}\r\n            });\r\n        }\r\n    }\r\n\r\n    onCloseLightbox = () => {\r\n        try {\r\n            this.setState({\r\n                lightbox: {\r\n                    ...this.state.lightbox,\r\n                    isOpen: false\r\n                }\r\n            });\r\n\r\n        } catch (error) {\r\n            // Error\r\n            handleError(error, {\r\n                actionName: 'onCloseLightbox',\r\n                path: PATH,\r\n                args: {}\r\n            });\r\n        }\r\n    }\r\n\r\n    renderSubMenu = () => {\r\n        try {\r\n            const {menus = {}, post} = this.props;\r\n            let arrMenus = [\r\n                {\r\n                    id: menus.id,\r\n                    name: menus.name,\r\n                    slug: menus.slug,\r\n                    active: post.category && post.category.id && menus.id === post.category.id\r\n                }\r\n            ];\r\n\r\n            if (menus.child && menus.child.length) {\r\n                arrMenus = arrMenus.concat(menus.child);\r\n            }\r\n\r\n            if (arrMenus && arrMenus.length) {\r\n                return (\r\n                    <ul>\r\n                        {\r\n                            arrMenus.map((menu) => {\r\n                                return (\r\n                                    <li key={menu.id} className={classname({'active': menu.active})}>\r\n                                        <Link href={'/category-by-id?slug=' + menu.slug + '&cid=' + menu.id} as={'/' + menu.slug + '-c' + menu.id + '.html'}>\r\n                                            <a title={menu.name}>{menu.name}</a>\r\n                                        </Link>\r\n                                    </li>\r\n                                );\r\n                            })\r\n                        }\r\n                    </ul>\r\n                );\r\n            }\r\n\r\n            return null;\r\n        } catch (error) {\r\n            handleError(error, {\r\n                actionName: 'renderSubMenu',\r\n                path: PATH,\r\n                args: {}\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {similarPosts, post = {}} = this.props;\r\n        let {isOpen, photoIndex, photos} = this.state.lightbox;\r\n\r\n        return  (\r\n            <Fragment>\r\n                jkbndswjkvnbdsajkvnbsdejkvbndsjkvb\r\n                <div ref={this.myRef} className={classname('container', styles['container'])}>\r\n                    {\r\n                        post && post.title ? (\r\n                            <>\r\n                                <div className=\"sub-navbar\" style={{background: '#fff'}}>\r\n                                    <div className={classname('clearfix w1040')}>\r\n                                        {this.renderSubMenu()}\r\n                                    </div>\r\n                                </div>\r\n                                <div className={classname(styles['container-body'], 'container-body clearfix w1040')}>\r\n                                    <div className={classname('clearfix w1040')}>\r\n                                        <div className={classname(styles['post-wrapper'], 'container-left fl w720')}>\r\n                                            <h1 className={classname(styles['post-title'])}>{post.title}</h1>\r\n                                            <div className={classname(styles['meta-source'])}>\r\n                                                <span className={classname(styles['source'])}>THEO {post.sourceName ? post.sourceName : 'VNEXPRESS'}</span>\r\n                                                <span className={classname(styles['time'])}><i className=\"fa fa-clock-o\" aria-hidden=\"true\" /> {post.time ? moment(post.time, 'YYYY-MM-DD HH:mm:ss').format('DD-MM-YYYY HH:mm:ss') : '21-09-2019 12:27:40'}</span>\r\n                                            </div>\r\n                                            <div className={classname(styles['socials'])} />\r\n                                            <div className={classname(styles['post-content'], 'post-content')}>\r\n                                                <div className={classname(styles['post-menu-navbar'])}>\r\n                                                    <div className={classname(styles['go-to-home'])}>\r\n                                                        <Link href=\"/\">\r\n                                                            <a title=\"Trang chủ\">\r\n                                                                <span className=\"icon-home\" />\r\n                                                            </a>\r\n                                                        </Link>\r\n                                                    </div>\r\n                                                    <div className={classname(styles['share-facebook'])}>\r\n                                                        <a\r\n                                                            ref={'nofollow'}\r\n                                                            target=\"_blank\" rel=\"noopener noreferrer\"\r\n                                                            title=\"Chia sẻ bài viết lên Facebook\"\r\n                                                            href={'https://www.facebook.com/sharer/sharer.php?u=' + post.href} >\r\n                                                            <span className=\"icon-facebook\" />\r\n                                                        </a>\r\n                                                    </div>\r\n                                                    <div className={classname(styles['go-back'])} >\r\n                                                        <Link href={'/category-by-id?slug=' + post.category.shorten + '&cid=' + post.category.id} as={'/' + post.category.shorten + '-c' + post.category.id + '.html'}>\r\n                                                            <a title={post.category ? 'Trở về ' + post.category.name : ''}>\r\n                                                                <span className=\"icon-undo2\" />\r\n                                                            </a>\r\n                                                        </Link>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <h2 className={classname(styles['post-description'])}>{post.description}</h2>\r\n                                                {\r\n                                                    this.state.isShowBackground && post.background ? (\r\n                                                        <div className={classname(styles['post-background'])}>\r\n                                                            <img alt={post.title} src={post.background} />\r\n                                                        </div>\r\n                                                    ) : null\r\n                                                }\r\n\r\n                                                <div className={classname(styles['post-container'])} dangerouslySetInnerHTML={{__html: post.content}} />\r\n\r\n                                                <div className=\"clearfix\">\r\n                                                    <div className={classname(styles['post-source'])}>\r\n                                                        <div>Theo <span>{post.sourceName ? post.sourceName : 'VNEXPRESS'}</span></div>\r\n                                                    </div>\r\n                                                    <div className={classname(styles['post-share'])} />\r\n                                                </div>\r\n                                            </div>\r\n                                            {\r\n                                                post.tags && post.tags.length ? (\r\n                                                    <div className={classname(styles['post-tags'], 'clearfix')}>\r\n                                                        <ul>\r\n                                                            {\r\n                                                                post.tags.map((tag, index) => {\r\n                                                                    return (\r\n                                                                        <li key={index}>\r\n                                                                            <Link href={'/tag?slug=' + tag.slug} as={'/' + tag.slug + '.html' }>\r\n                                                                                <a title={tag.name}>#{tag.name}</a>\r\n                                                                            </Link>\r\n                                                                        </li>\r\n                                                                    );\r\n                                                                })\r\n                                                            }\r\n                                                        </ul>\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                        <div className={classname('container-right col-sticky fr mt-20 w300')}>\r\n                                            {\r\n                                                similarPosts && similarPosts.length ? (\r\n                                                    <SidebarHighlightWidget\r\n                                                        key={this.props.post.pid}\r\n                                                        className=\"col-sticky\"\r\n                                                        title=\"Bài viết liên quan\"\r\n                                                        background={'normal'}\r\n                                                        posts={similarPosts}\r\n                                                    />\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className={classname('clearfix w1040')}>\r\n                                        <div className={classname(styles['post-wrapper'], 'container-left fl w720')}>\r\n                                            <div className={classname(styles['post-related'])}>\r\n                                                {\r\n                                                    similarPosts.length >= 4 ? (\r\n                                                        <SimilarNewsWidget\r\n                                                            key={this.props.post.pid}\r\n                                                            title=\"Bài viết liên quan\"\r\n                                                            background={'normal'}\r\n                                                            posts={similarPosts.filter((post, key) => key > 0)}\r\n                                                        />\r\n                                                    ) : null\r\n                                                }\r\n\r\n                                                {\r\n                                                    this.state.categorySimilarPosts.length ? (\r\n                                                        <>\r\n                                                            <div className={classname(styles['post-related-title'])}>Tin mới cùng chuyên mục</div>\r\n                                                            <HorizontalWidget\r\n                                                                skeletonLoading={!this.state.categorySimilarPosts.length}\r\n                                                                background={'normal'}\r\n                                                                posts={this.state.categorySimilarPosts}\r\n                                                            />\r\n                                                        </>\r\n                                                    ) : null\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className={classname('container-right col-sticky fr mt-20 w300')}>\r\n                                            <SidebarNewsWidget\r\n                                                skeletonLoading={!this.state.latestPosts.length}\r\n                                                title=\"Bài viết mới nhất\"\r\n                                                background={'medium'}\r\n                                                posts={this.state.latestPosts}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <ModalGateway>\r\n                                    {\r\n                                        isOpen ? (\r\n                                            <Modal onClose={this.onCloseLightbox}>\r\n                                                <Carousel\r\n                                                    currentIndex={photoIndex}\r\n                                                    views={photos.map(x => ({\r\n                                                        ...x,\r\n                                                        srcset: x.srcSet,\r\n                                                        caption: x.title\r\n                                                    }))}\r\n                                                />\r\n                                            </Modal>\r\n                                        ) : null\r\n                                    }\r\n                                </ModalGateway>\r\n                            </>\r\n                        ) : (\r\n                            <div className={classname(styles['post-not-found'], 'w1040')}>\r\n                                <img alt=\"Page not found\" src={PageNotFound} />\r\n                                <p>Xin lỗi bạn, chúng tôi không tìm thấy bài viết này. <br /> Mời bạn quay về trang chủ để xem những tin tức mới nhất.</p>\r\n                                <Link href=\"/\">\r\n                                    <a title=\"Trở về trang chủ\" className={classname(styles['go-back-to-home'])}>Trở về trang chủ</a>\r\n                                </Link>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Post;\r\n"]},"metadata":{},"sourceType":"module"}