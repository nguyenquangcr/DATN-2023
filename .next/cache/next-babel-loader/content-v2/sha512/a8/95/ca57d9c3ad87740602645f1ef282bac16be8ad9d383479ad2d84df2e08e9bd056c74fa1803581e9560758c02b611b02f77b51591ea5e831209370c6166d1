{"ast":null,"code":"import _defineProperty from \"E:/meovathay/application/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"E:/meovathay/application/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"E:\\\\meovathay\\\\application\\\\pages\\\\tag.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Fragment } from 'react';\nimport classname from 'classnames';\nimport Link from 'next/link'; // Components\n\nimport HorizontalWidget from 'Components/HorizontalWidget';\nimport SidebarNewsWidget from 'Components/SidebarNewsWidget';\nimport PageNotFound from 'Components/PageNotFound'; // Actions\n\nimport { updateBreadcrumbStructure, updateDocument } from '../store'; // Services\n\nimport * as PostTagService from 'Services/Post/Tags';\nimport * as PostCategoryService from 'Services/Post/Category'; // Assets\n\nimport styles from 'Modules/Pages/Tag/styles.module.scss'; // Utils\n\nimport Constant from 'Config/constant';\nimport { handleError } from 'Libs/utils';\nconst PATH = 'application/pages/tag.jsx';\nconst POST_PER_PAGE = 20;\n\nclass Tags extends React.Component {\n  static getInitialProps({\n    reduxStore,\n    req,\n    query\n  }) {\n    return _asyncToGenerator(function* () {\n      try {\n        let states = reduxStore.getState();\n        let slug = '';\n        let tag = {};\n        let similarTags = [];\n        let posts = [];\n        let latestPosts = [];\n\n        if (query && query.slug) {\n          slug = query.slug;\n          let postService = PostTagService.getList({\n            slug: query.slug,\n            limit: POST_PER_PAGE,\n            page: 1\n          });\n\n          if (postService) {\n            yield postService.then(response => {\n              if (response && response.data && response.data.data && response.data.data.posts) {\n                if (response.data.data.tags && response.data.data.tags.length) {\n                  tag = response.data.data.tags[0];\n                  posts = response.data.data.posts;\n                  let title = tag.name + ' - ' + states.document.defaultTitle;\n                  let images = [];\n\n                  if (posts.length) {\n                    let arrTagsSlug = [];\n                    posts.map(post => {\n                      if (post.background) {\n                        images.push(post.background);\n                      } else if (post.images && post.images.normal) {\n                        images.push(post.images.normal);\n                      } // similarTags\n\n\n                      if (post.tags && post.tags.length) {\n                        post.tags.map(tagItem => {\n                          if (tagItem.slug && arrTagsSlug.indexOf(tagItem.slug) < 0) {\n                            arrTagsSlug.push(tagItem.slug);\n                            similarTags.push(_objectSpread({}, tagItem));\n                          }\n                        });\n                      }\n                    }); // Validate images\n\n                    if (images.length) {\n                      images = images.map(image => {\n                        if (image && image.indexOf('https:') < 0) {\n                          return 'https:' + image;\n                        }\n\n                        return image;\n                      });\n                    }\n                  }\n\n                  if (tag.name) {\n                    const url = Constant.SITE_URL + slug + '.html';\n                    const mobileUrl = Constant.MOBILE_SITE_URL + slug + '.html';\n                    let og = {\n                      description: title,\n                      images: images,\n                      url: url\n                    }; // Update document metadata\n\n                    reduxStore.dispatch(updateDocument({\n                      canonical: url,\n                      alternate: mobileUrl,\n                      title: tag.name + ' - ' + states.document.defaultTitle,\n                      og: _objectSpread(_objectSpread({}, og), {}, {\n                        title: title\n                      })\n                    })); // Update Breadcrumb structured data\n\n                    const breadcrumbItems = [{\n                      '@type': 'ListItem',\n                      'position': 1,\n                      'item': {\n                        '@id': Constant.SITE_URL,\n                        'name': 'Tin tức'\n                      }\n                    }, {\n                      '@type': 'ListItem',\n                      'position': 2,\n                      'item': {\n                        '@id': Constant.SITE_URL + slug + '.html',\n                        'name': tag.name\n                      }\n                    }];\n                    reduxStore.dispatch(updateBreadcrumbStructure({\n                      itemListElement: breadcrumbItems\n                    }));\n                  }\n                }\n              }\n            });\n          } // latest posts\n\n\n          let getLatestPosts = PostCategoryService.getList({\n            type: 'latest',\n            page: 1\n          });\n\n          if (getLatestPosts) {\n            yield getLatestPosts.then(response => {\n              if (response && response.data && response.data.data && response.data.data.posts) {\n                latestPosts = response.data.data.posts;\n              }\n            });\n          }\n        }\n\n        return {\n          slug,\n          tag,\n          similarTags,\n          posts,\n          latestPosts\n        };\n      } catch (error) {\n        // Error\n        handleError(error, {\n          actionName: 'getInitialProps',\n          path: PATH,\n          args: {}\n        });\n      }\n    })();\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      page: 1\n    };\n    this.myRef = /*#__PURE__*/React.createRef();\n  }\n\n  render() {\n    const tagName = this.props.tag && this.props.tag.name ? this.props.tag.name : '';\n\n    try {\n      return __jsx(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 17\n        }\n      }, __jsx(\"div\", {\n        ref: this.myRef,\n        className: classname('container', styles['container']),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }\n      }, __jsx(\"div\", {\n        className: classname(styles['sub-navbar']),\n        style: {\n          height: 50\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 25\n        }\n      }, __jsx(\"div\", {\n        className: classname('clearfix w1040', styles['w1040']),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 29\n        }\n      }, this.props.similarTags.length ? __jsx(\"ul\", {\n        className: classname(styles['sub-navbar-keywords']),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 41\n        }\n      }, __jsx(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 45\n        }\n      }, __jsx(\"i\", {\n        className: \"icon icon-arrow-graph-up-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 49\n        }\n      })), this.props.similarTags.map((tag, key) => {\n        if (key < 5 && tag.slug && tag.name) {\n          return __jsx(\"li\", {\n            key: tag.id,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 61\n            }\n          }, __jsx(Link, {\n            href: '/tag?slug=' + tag.slug,\n            as: '/' + tag.slug + '.html',\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 65\n            }\n          }, __jsx(\"a\", {\n            title: 'Từ khóa: ' + tag.name,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 69\n            }\n          }, tag.name)));\n        }\n      })) : null)), __jsx(\"div\", {\n        className: classname('container-body clearfix w1040', styles['container-body']),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 25\n        }\n      }, __jsx(\"div\", {\n        className: classname('clearfix w1040'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 29\n        }\n      }, __jsx(\"div\", {\n        className: classname('container-left fl w720', styles['container-left']),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 33\n        }\n      }, tagName ? __jsx(React.Fragment, null, __jsx(\"div\", {\n        className: \"clearfix\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 49\n        }\n      }, __jsx(\"h2\", {\n        className: classname('mt-20', styles['post-title']),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 53\n        }\n      }, tagName || 'Từ khóa không tồn tại')), __jsx(\"div\", {\n        className: \"top-news\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 49\n        }\n      }, __jsx(HorizontalWidget, {\n        skeletonLoading: !this.props.posts.length,\n        number: 100,\n        isShowCategory: true,\n        background: 'normal',\n        posts: this.props.posts,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 53\n        }\n      }))) : __jsx(PageNotFound, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 45\n        }\n      })), __jsx(\"div\", {\n        className: classname('container-right col-sticky fr mt-20 w300'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 33\n        }\n      }, __jsx(SidebarNewsWidget, {\n        className: \"col-sticky\",\n        skeletonLoading: !this.props.latestPosts.length,\n        title: \"Tin t\\u1EE9c m\\u1EDBi nh\\u1EA5t\",\n        background: 'medium',\n        posts: this.props.latestPosts,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 37\n        }\n      }))))));\n    } catch (error) {\n      handleError(error, {\n        actionName: 'render',\n        path: PATH,\n        args: {}\n      });\n    }\n  }\n\n}\n\nexport default Tags;","map":{"version":3,"sources":["E:/meovathay/application/pages/tag.jsx"],"names":["React","Fragment","classname","Link","HorizontalWidget","SidebarNewsWidget","PageNotFound","updateBreadcrumbStructure","updateDocument","PostTagService","PostCategoryService","styles","Constant","handleError","PATH","POST_PER_PAGE","Tags","Component","getInitialProps","reduxStore","req","query","states","getState","slug","tag","similarTags","posts","latestPosts","postService","getList","limit","page","then","response","data","tags","length","title","name","document","defaultTitle","images","arrTagsSlug","map","post","background","push","normal","tagItem","indexOf","image","url","SITE_URL","mobileUrl","MOBILE_SITE_URL","og","description","dispatch","canonical","alternate","breadcrumbItems","itemListElement","getLatestPosts","type","error","actionName","path","args","constructor","props","state","myRef","createRef","render","tagName","height","key","id"],"mappings":"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","sourcesContent":["import React, {Fragment} from 'react';\r\nimport classname from 'classnames';\r\nimport Link from 'next/link';\r\n\r\n// Components\r\nimport HorizontalWidget from 'Components/HorizontalWidget';\r\nimport SidebarNewsWidget from 'Components/SidebarNewsWidget';\r\nimport PageNotFound from 'Components/PageNotFound';\r\n\r\n// Actions\r\nimport {updateBreadcrumbStructure, updateDocument} from '../store';\r\n\r\n// Services\r\nimport * as PostTagService from 'Services/Post/Tags';\r\nimport * as PostCategoryService from 'Services/Post/Category';\r\n\r\n// Assets\r\nimport styles from 'Modules/Pages/Tag/styles.module.scss';\r\n\r\n// Utils\r\nimport Constant from 'Config/constant';\r\nimport {handleError} from 'Libs/utils';\r\n\r\nconst PATH = 'application/pages/tag.jsx';\r\nconst POST_PER_PAGE = 20;\r\n\r\nclass Tags extends React.Component {\r\n    static async getInitialProps({reduxStore, req, query}) {\r\n        try {\r\n            let states = reduxStore.getState();\r\n            let slug = '';\r\n            let tag = {};\r\n            let similarTags = [];\r\n            let posts = [];\r\n            let latestPosts = [];\r\n\r\n            if (query && query.slug) {\r\n                slug = query.slug;\r\n                let postService = PostTagService.getList({\r\n                    slug: query.slug,\r\n                    limit: POST_PER_PAGE,\r\n                    page: 1\r\n                });\r\n\r\n                if (postService) {\r\n                    await postService.then((response) => {\r\n                        if (response && response.data && response.data.data && response.data.data.posts) {\r\n                            if (response.data.data.tags && response.data.data.tags.length) {\r\n                                tag = response.data.data.tags[0];\r\n                                posts = response.data.data.posts;\r\n\r\n                                let title = tag.name + ' - ' + states.document.defaultTitle;\r\n                                let images = [];\r\n\r\n                                if (posts.length) {\r\n                                    let arrTagsSlug = [];\r\n\r\n                                    posts.map((post) => {\r\n                                        if (post.background) {\r\n                                            images.push(post.background);\r\n                                        } else if (post.images && post.images.normal) {\r\n                                            images.push(post.images.normal);\r\n                                        }\r\n\r\n                                        // similarTags\r\n                                        if (post.tags && post.tags.length) {\r\n                                            post.tags.map((tagItem) => {\r\n                                                if (tagItem.slug && arrTagsSlug.indexOf(tagItem.slug) < 0) {\r\n                                                    arrTagsSlug.push(tagItem.slug);\r\n\r\n                                                    similarTags.push({\r\n                                                        ...tagItem\r\n                                                    });\r\n                                                }\r\n                                            });\r\n                                        }\r\n                                    });\r\n\r\n                                    // Validate images\r\n                                    if (images.length) {\r\n                                        images = images.map((image) => {\r\n                                            if (image && image.indexOf('https:') < 0) {\r\n                                                return 'https:' + image;\r\n                                            }\r\n\r\n                                            return image;\r\n                                        });\r\n                                    }\r\n                                }\r\n\r\n                                if (tag.name) {\r\n                                    const url = Constant.SITE_URL + slug + '.html';\r\n                                    const mobileUrl = Constant.MOBILE_SITE_URL + slug + '.html';\r\n                                    let og = {\r\n                                        description: title,\r\n                                        images: images,\r\n                                        url: url\r\n                                    };\r\n\r\n                                    // Update document metadata\r\n                                    reduxStore.dispatch(updateDocument({\r\n                                        canonical: url,\r\n                                        alternate: mobileUrl,\r\n                                        title: tag.name + ' - ' + states.document.defaultTitle,\r\n                                        og: {\r\n                                            ...og,\r\n                                            title: title\r\n                                        }\r\n                                    }));\r\n\r\n                                    // Update Breadcrumb structured data\r\n                                    const breadcrumbItems = [\r\n                                        {\r\n                                            '@type': 'ListItem',\r\n                                            'position': 1,\r\n                                            'item': {\r\n                                                '@id': Constant.SITE_URL,\r\n                                                'name': 'Tin tức'\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            '@type': 'ListItem',\r\n                                            'position': 2,\r\n                                            'item': {\r\n                                                '@id': Constant.SITE_URL + slug + '.html',\r\n                                                'name': tag.name\r\n                                            }\r\n                                        }\r\n                                    ];\r\n\r\n                                    reduxStore.dispatch(updateBreadcrumbStructure({\r\n                                        itemListElement: breadcrumbItems\r\n                                    }));\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n\r\n                // latest posts\r\n                let getLatestPosts = PostCategoryService.getList({\r\n                    type: 'latest',\r\n                    page: 1\r\n                });\r\n\r\n                if (getLatestPosts) {\r\n                    await getLatestPosts.then((response) => {\r\n                        if (response && response.data && response.data.data && response.data.data.posts) {\r\n                            latestPosts = response.data.data.posts;\r\n                        }\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n            return {slug, tag, similarTags, posts, latestPosts};\r\n        } catch (error) {\r\n            // Error\r\n            handleError(error, {\r\n                actionName: 'getInitialProps',\r\n                path: PATH,\r\n                args: {}\r\n            });\r\n        }\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            page: 1\r\n        };\r\n\r\n        this.myRef = React.createRef();\r\n    }\r\n\r\n    render() {\r\n        const tagName = this.props.tag && this.props.tag.name ? this.props.tag.name : '';\r\n\r\n        try {\r\n            return (\r\n                <Fragment>\r\n                    <div ref={this.myRef} className={classname('container', styles['container'])}>\r\n                        <div className={classname(styles['sub-navbar'])} style={{height: 50}}>\r\n                            <div className={classname('clearfix w1040', styles['w1040'])}>\r\n                                {\r\n                                    this.props.similarTags.length ? (\r\n                                        <ul className={classname(styles['sub-navbar-keywords'])}>\r\n                                            <li><i className=\"icon icon-arrow-graph-up-right\" /></li>\r\n                                            {\r\n                                                this.props.similarTags.map((tag, key) => {\r\n                                                    if (key < 5 && tag.slug && tag.name) {\r\n                                                        return (\r\n                                                            <li key={tag.id}>\r\n                                                                <Link href={'/tag?slug=' + tag.slug} as={'/' + tag.slug + '.html' }>\r\n                                                                    <a title={'Từ khóa: ' + tag.name}>{tag.name}</a>\r\n                                                                </Link>\r\n                                                            </li>\r\n                                                        );\r\n                                                    }\r\n                                                })\r\n                                            }\r\n                                        </ul>\r\n                                    ) : null\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <div className={classname('container-body clearfix w1040', styles['container-body'])}>\r\n                            <div className={classname('clearfix w1040')}>\r\n                                <div className={classname('container-left fl w720', styles['container-left'])}>\r\n                                    {\r\n                                        tagName ? (\r\n                                            <>\r\n                                                <div className=\"clearfix\">\r\n                                                    <h2 className={classname('mt-20', styles['post-title'])}>{tagName || 'Từ khóa không tồn tại'}</h2>\r\n                                                </div>\r\n                                                <div className=\"top-news\">\r\n                                                    <HorizontalWidget\r\n                                                        skeletonLoading={!this.props.posts.length}\r\n                                                        number={100}\r\n                                                        isShowCategory={true}\r\n                                                        background={'normal'}\r\n                                                        posts={this.props.posts}\r\n                                                    />\r\n                                                </div>\r\n                                            </>\r\n                                        ) : <PageNotFound />\r\n                                    }\r\n                                </div>\r\n                                <div className={classname('container-right col-sticky fr mt-20 w300')}>\r\n                                    <SidebarNewsWidget\r\n                                        className=\"col-sticky\"\r\n                                        skeletonLoading={!this.props.latestPosts.length}\r\n                                        title=\"Tin tức mới nhất\"\r\n                                        background={'medium'}\r\n                                        posts={this.props.latestPosts} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Fragment>\r\n            );\r\n        } catch (error) {\r\n            handleError(error, {\r\n                actionName: 'render',\r\n                path: PATH,\r\n                args: {}\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport default Tags;\r\n"]},"metadata":{},"sourceType":"module"}