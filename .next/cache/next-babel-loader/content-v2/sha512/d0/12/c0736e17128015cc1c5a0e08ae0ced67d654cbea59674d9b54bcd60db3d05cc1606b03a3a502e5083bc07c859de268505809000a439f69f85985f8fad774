{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"E:\\\\meovathay\\\\application\\\\pages\\\\newPost.jsx\";\nvar __jsx = React.createElement;\nimport React, { useRef } from 'react';\nimport { Editor } from '@tinymce/tinymce-react';\nimport { Button, Col, Form, Input, Row } from 'antd';\n\nconst NewPost = () => {\n  const [form] = Form.useForm();\n  const editorRef = useRef(null);\n\n  const log = () => {\n    if (editorRef.current) {\n      console.log(editorRef.current.getContent());\n    }\n  };\n\n  const onFinish = values => {\n    console.log(values);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Row, {\n    gutter: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, __jsx(Col, {\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }, __jsx(Editor, {\n    onInit: (evt, editor) => editorRef.current = editor,\n    initialValue: \"<p>This is the initial content of the editor.</p>\",\n    init: {\n      selector: 'textarea#image-tools',\n      height: 500,\n      plugins: ['advlist autolink lists link image charmap print preview anchor', 'searchreplace visualblocks code fullscreen', 'insertdatetime media table paste imagetools wordcount'],\n      toolbar: 'insertfile undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image',\n      content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 21\n    }\n  })), __jsx(Col, {\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, __jsx(Form, {\n    layout: 'vertical',\n    form: form,\n    initialValues: {\n      layout: formLayout\n    },\n    style: {\n      maxWidth: 600\n    },\n    onFinish: onFinish,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, __jsx(Form.Item, {\n    label: \"Field A\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }\n  }, __jsx(Input, {\n    placeholder: \"input placeholder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 29\n    }\n  })), __jsx(Form.Item, {\n    label: \"Field B\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }\n  }, __jsx(Input, {\n    placeholder: \"input placeholder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 29\n    }\n  })), __jsx(Form.Item, _extends({}, buttonItemLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  }), __jsx(Button, {\n    type: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 29\n    }\n  }, \"Submit\")))), __jsx(\"button\", {\n    onClick: log,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, \"Log editor content\")));\n};\n\nexport default NewPost;","map":{"version":3,"sources":["E:/meovathay/application/pages/newPost.jsx"],"names":["React","useRef","Editor","Button","Col","Form","Input","Row","NewPost","form","useForm","editorRef","log","current","console","getContent","onFinish","values","evt","editor","selector","height","plugins","toolbar","content_style","layout","formLayout","maxWidth","buttonItemLayout"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,MAAf,QAA4B,OAA5B;AACA,SAAQC,MAAR,QAAqB,wBAArB;AACA,SAAQC,MAAR,EAAgBC,GAAhB,EAAqBC,IAArB,EAA2BC,KAA3B,EAAkCC,GAAlC,QAA4C,MAA5C;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAClB,QAAM,CAACC,IAAD,IAASJ,IAAI,CAACK,OAAL,EAAf;AACA,QAAMC,SAAS,GAAGV,MAAM,CAAC,IAAD,CAAxB;;AACA,QAAMW,GAAG,GAAG,MAAM;AACd,QAAID,SAAS,CAACE,OAAd,EAAuB;AACnBC,MAAAA,OAAO,CAACF,GAAR,CAAYD,SAAS,CAACE,OAAV,CAAkBE,UAAlB,EAAZ;AACH;AACJ,GAJD;;AAMA,QAAMC,QAAQ,GAAIC,MAAD,IAAY;AACzBH,IAAAA,OAAO,CAACF,GAAR,CAAYK,MAAZ;AACH,GAFD;;AAIA,SACI,4BACI,MAAC,GAAD;AAAK,IAAA,MAAM,EAAE,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,GAAD;AAAK,IAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AACI,IAAA,MAAM,EAAE,CAACC,GAAD,EAAMC,MAAN,KAAiBR,SAAS,CAACE,OAAV,GAAoBM,MADjD;AAEI,IAAA,YAAY,EAAC,mDAFjB;AAGI,IAAA,IAAI,EAAE;AACFC,MAAAA,QAAQ,EAAE,sBADR;AAEFC,MAAAA,MAAM,EAAE,GAFN;AAGFC,MAAAA,OAAO,EAAE,CACL,gEADK,EAEL,4CAFK,EAGL,uDAHK,CAHP;AAQFC,MAAAA,OAAO,EAAE,gJARP;AASFC,MAAAA,aAAa,EAAE;AATb,KAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAkBI,MAAC,GAAD;AAAK,IAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AACI,IAAA,MAAM,EAAE,UADZ;AAEI,IAAA,IAAI,EAAEf,IAFV;AAGI,IAAA,aAAa,EAAE;AAACgB,MAAAA,MAAM,EAAEC;AAAT,KAHnB;AAII,IAAA,KAAK,EAAE;AAACC,MAAAA,QAAQ,EAAE;AAAX,KAJX;AAKI,IAAA,QAAQ,EAAEX,QALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQI,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAC,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,KAAD;AAAO,IAAA,WAAW,EAAC,mBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CARJ,EAWI,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAC,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,KAAD;AAAO,IAAA,WAAW,EAAC,mBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAXJ,EAcI,MAAC,IAAD,CAAM,IAAN,eAAeY,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACI,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CAdJ,CADJ,CAlBJ,EAsCI;AAAQ,IAAA,OAAO,EAAEhB,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAtCJ,CADJ,CADJ;AA4CH,CAzDD;;AA2DA,eAAeJ,OAAf","sourcesContent":["import React, {useRef} from 'react';\r\nimport {Editor} from '@tinymce/tinymce-react';\r\nimport {Button, Col, Form, Input, Row} from 'antd';\r\n\r\nconst NewPost = () => {\r\n    const [form] = Form.useForm();\r\n    const editorRef = useRef(null);\r\n    const log = () => {\r\n        if (editorRef.current) {\r\n            console.log(editorRef.current.getContent());\r\n        }\r\n    };\r\n\r\n    const onFinish = (values) => {\r\n        console.log(values);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Row gutter={16}>\r\n                <Col span={12}>\r\n                    <Editor\r\n                        onInit={(evt, editor) => editorRef.current = editor}\r\n                        initialValue=\"<p>This is the initial content of the editor.</p>\"\r\n                        init={{\r\n                            selector: 'textarea#image-tools',\r\n                            height: 500,\r\n                            plugins: [\r\n                                'advlist autolink lists link image charmap print preview anchor',\r\n                                'searchreplace visualblocks code fullscreen',\r\n                                'insertdatetime media table paste imagetools wordcount'\r\n                            ],\r\n                            toolbar: 'insertfile undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image',\r\n                            content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }'\r\n                        }}\r\n                    />\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Form\r\n                        layout={'vertical'}\r\n                        form={form}\r\n                        initialValues={{layout: formLayout}}\r\n                        style={{maxWidth: 600}}\r\n                        onFinish={onFinish}\r\n                    >\r\n\r\n                        <Form.Item label=\"Field A\">\r\n                            <Input placeholder=\"input placeholder\" />\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Field B\">\r\n                            <Input placeholder=\"input placeholder\" />\r\n                        </Form.Item>\r\n                        <Form.Item {...buttonItemLayout}>\r\n                            <Button type=\"primary\">Submit</Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Col>\r\n                <button onClick={log}>Log editor content</button>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NewPost;\r\n"]},"metadata":{},"sourceType":"module"}