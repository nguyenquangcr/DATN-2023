{"ast":null,"code":"import _asyncToGenerator from \"E:/meovathay/application/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"E:/meovathay/application/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"E:\\\\meovathay\\\\application\\\\pages\\\\category-by-id.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Fragment } from 'react';\nimport Link from 'next/link';\nimport { withRouter } from 'next/router';\nimport classname from 'classnames'; // Components\n\nimport FeaturedWidget from 'Components/FeaturedWidget';\nimport HorizontalWidget from 'Components/HorizontalWidget';\nimport SidebarNewsWidget from 'Components/SidebarNewsWidget';\nimport Pagination from 'Components/Pagination'; // Services\n\nimport * as PostCategoryService from 'Services/Post/Category'; // Actions\n\nimport { setHeaderMenu, updateDocument, updateBreadcrumbStructure } from '../store'; // Utils\n\nimport Constant from 'Config/constant';\nimport { handleError } from 'Libs/utils';\nconst PATH = 'application/pages/category.jsx';\nconst POST_PER_PAGE = 20;\n\nclass Category extends React.Component {\n  static getInitialProps({\n    reduxStore,\n    query\n  }) {\n    return _asyncToGenerator(function* () {\n      try {\n        let states = reduxStore.getState();\n        let og = {};\n        let slug = '';\n        let category = {};\n        let cid = '';\n        let total = 1;\n        let currentPage = Math.abs(+query.page) || 1;\n        let menus = [];\n        let topFeaturePosts = [];\n        let posts = [];\n        let featurePostsByWeek = [];\n        let images = []; // Validate slug\n\n        if (query && query.slug && query.cid) {\n          slug = query.slug;\n          cid = query.cid;\n          const path = slug;\n          const url = Constant.SITE_URL + path + '-c' + cid + '.html';\n          const mobileUrl = Constant.MOBILE_SITE_URL + path + '-c' + cid + '.html'; // Update document metadata\n\n          reduxStore.dispatch(updateDocument({\n            canonical: url,\n            alternate: mobileUrl\n          }));\n\n          try {\n            let getPosts = PostCategoryService.getList({\n              slug: slug,\n              limit: POST_PER_PAGE,\n              page: currentPage\n            });\n\n            if (getPosts) {\n              const response = yield getPosts;\n\n              if (response && response.data && response.data.data && response.data.data.posts) {\n                posts = response.data.data.posts;\n                total = +response.data.data.total || 1;\n\n                if (posts.length) {\n                  posts.map((post, key) => {\n                    // Add to feature posts\n                    if (key < 3) {\n                      topFeaturePosts.push(post);\n                    }\n\n                    let image = ''; // Validate images for header metadata\n\n                    if (post.background) {\n                      image = post.background;\n                    } else if (post.images && post.images.normal) {\n                      image = post.images.normal;\n                    }\n\n                    if (image && image.indexOf('https:') < 0) {\n                      return 'https:' + image;\n                    }\n\n                    images.push(image);\n                  }); // Filter 3 posts for feature\n\n                  posts = posts.filter((value, index) => index >= 3);\n                }\n              }\n            } // Find active category\n\n\n            if (states && states.headerMenu) {\n              const headerMenu = states.headerMenu;\n              headerMenu.map(menu => {\n                // Update header menu active\n                menu.active = menu.id === +cid;\n\n                if (menu.id === +cid) {\n                  // Set menus info\n                  menus = menu; // Active category\n\n                  category = menu;\n                } else if (menu.child) {\n                  menu.child.map(childMenu => {\n                    if (childMenu.id === +cid) {\n                      // Set menus info\n                      menus = menu; // Active category\n\n                      category = childMenu;\n                    }\n                  });\n                }\n              });\n              reduxStore.dispatch(setHeaderMenu(headerMenu)); // Update document metadata\n\n              if (category && category.id) {\n                const title = category.name + ' - ' + states.document.defaultTitle;\n                reduxStore.dispatch(updateDocument({\n                  title: title,\n                  og: _objectSpread(_objectSpread({}, og), {}, {\n                    title: title,\n                    description: states.document.defaultDescription,\n                    images: images,\n                    url: url\n                  })\n                })); // Update Breadcrumb structured data\n\n                const breadcrumbItems = [{\n                  '@type': 'ListItem',\n                  'position': 1,\n                  'item': {\n                    '@id': Constant.SITE_URL,\n                    'name': 'Tin tá»©c'\n                  }\n                }, {\n                  '@type': 'ListItem',\n                  'position': 2,\n                  'item': {\n                    '@id': url,\n                    'name': title\n                  }\n                }];\n                reduxStore.dispatch(updateBreadcrumbStructure({\n                  itemListElement: breadcrumbItems\n                }));\n              }\n            } // Sidebar top posts\n\n\n            let getTopPosts = PostCategoryService.getList({\n              slug: slug,\n              type: 'top',\n              time: 'weekly'\n            });\n\n            if (getTopPosts) {\n              const response = yield getTopPosts;\n\n              if (response && response.data && response.data.data && response.data.data.posts) {\n                featurePostsByWeek = response.data.data.posts;\n              }\n            }\n          } catch (error) {\n            //Error\n            handleError(new Error('Category slug not found'), {\n              actionName: 'getInitialProps',\n              path: PATH,\n              args: {}\n            });\n          }\n        }\n\n        return {\n          cid,\n          category,\n          menus,\n          topFeaturePosts,\n          posts,\n          currentPage,\n          total,\n          featurePostsByWeek\n        };\n      } catch (error) {\n        // Error\n        handleError(error, {\n          actionName: 'getInitialProps',\n          path: PATH,\n          args: {}\n        });\n      }\n    })();\n  }\n\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"renderSubMenu\", () => {\n      try {\n        const {\n          menus = {},\n          cid\n        } = this.props;\n        let arrMenus = [{\n          id: menus.id,\n          name: menus.name,\n          slug: menus.slug,\n          active: menus.id === +cid\n        }];\n\n        if (menus.child && menus.child.length) {\n          arrMenus = arrMenus.concat(menus.child);\n        }\n\n        if (arrMenus && arrMenus.length) {\n          return __jsx(\"ul\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 21\n            }\n          }, arrMenus.map(menu => {\n            if (menu.id) {\n              return __jsx(\"li\", {\n                key: menu.id,\n                className: classname({\n                  'active': menu.id === +cid\n                }),\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 41\n                }\n              }, __jsx(Link, {\n                href: '/category-by-id?slug=' + menu.slug + '&cid=' + menu.id,\n                as: '/' + menu.slug + '-c' + menu.id + '.html',\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 45\n                }\n              }, __jsx(\"a\", {\n                title: menu.name,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 49\n                }\n              }, menu.name)));\n            }\n          }));\n        }\n      } catch (error) {\n        handleError(error, {\n          actionName: 'renderSubMenu',\n          path: PATH,\n          args: {}\n        });\n      }\n    });\n\n    this.state = {};\n    this.myRef = /*#__PURE__*/React.createRef();\n  }\n\n  render() {\n    const {\n      cid,\n      category,\n      topFeaturePosts = [],\n      posts = [],\n      featurePostsByWeek = [],\n      currentPage = 1\n    } = this.props;\n    const href = category && category.slug ? Constant.SITE_URL + category.slug + '-c' + cid + '.html' : '';\n\n    try {\n      return __jsx(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 17\n        }\n      }, __jsx(\"div\", {\n        ref: this.myRef,\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 21\n        }\n      }, __jsx(\"div\", {\n        className: \"sub-navbar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 25\n        }\n      }, __jsx(\"div\", {\n        className: classname('clearfix w1040'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 29\n        }\n      }, this.renderSubMenu())), __jsx(\"div\", {\n        className: classname('container-body clearfix w1040'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 25\n        }\n      }, __jsx(\"div\", {\n        className: classname('clearfix w1040'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 29\n        }\n      }, __jsx(\"div\", {\n        className: classname('container-left fl w720'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 33\n        }\n      }, __jsx(FeaturedWidget, {\n        className: \"mt-20\",\n        skeletonLoading: !topFeaturePosts.length,\n        posts: topFeaturePosts,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 37\n        }\n      }), posts.length ? __jsx(HorizontalWidget, {\n        skeletonLoading: false,\n        background: 'medium',\n        number: 100,\n        posts: posts,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 45\n        }\n      }) : null, __jsx(\"div\", {\n        className: classname('pb-20'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 37\n        }\n      }, __jsx(Pagination, {\n        href: href,\n        currentPage: currentPage,\n        pageSize: POST_PER_PAGE,\n        total: this.props.total,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 41\n        }\n      }))), __jsx(\"div\", {\n        className: classname('container-right col-sticky fr mt-20 w300'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 33\n        }\n      }, __jsx(SidebarNewsWidget, {\n        skeletonLoading: !featurePostsByWeek.length,\n        title: \"M\\u1EB9o hay tu\\u1EA7n qua\",\n        className: \"col-sticky sidebar-widget-news\",\n        background: 'medium',\n        posts: featurePostsByWeek,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 37\n        }\n      }))))));\n    } catch (error) {\n      handleError(error, {\n        actionName: 'render',\n        path: PATH,\n        args: {}\n      });\n    }\n  }\n\n}\n\nexport default _c = withRouter(Category);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["E:/meovathay/application/pages/category-by-id.jsx"],"names":["React","Fragment","Link","withRouter","classname","FeaturedWidget","HorizontalWidget","SidebarNewsWidget","Pagination","PostCategoryService","setHeaderMenu","updateDocument","updateBreadcrumbStructure","Constant","handleError","PATH","POST_PER_PAGE","Category","Component","getInitialProps","reduxStore","query","states","getState","og","slug","category","cid","total","currentPage","Math","abs","page","menus","topFeaturePosts","posts","featurePostsByWeek","images","path","url","SITE_URL","mobileUrl","MOBILE_SITE_URL","dispatch","canonical","alternate","getPosts","getList","limit","response","data","length","map","post","key","push","image","background","normal","indexOf","filter","value","index","headerMenu","menu","active","id","child","childMenu","title","name","document","defaultTitle","description","defaultDescription","breadcrumbItems","itemListElement","getTopPosts","type","time","error","Error","actionName","args","constructor","props","arrMenus","concat","state","myRef","createRef","render","href","renderSubMenu"],"mappings":"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","sourcesContent":["import React, {Fragment} from 'react';\r\nimport Link from 'next/link';\r\nimport {withRouter} from 'next/router';\r\nimport classname from 'classnames';\r\n\r\n// Components\r\nimport FeaturedWidget from 'Components/FeaturedWidget';\r\nimport HorizontalWidget from 'Components/HorizontalWidget';\r\nimport SidebarNewsWidget from 'Components/SidebarNewsWidget';\r\nimport Pagination from 'Components/Pagination';\r\n\r\n// Services\r\nimport * as PostCategoryService from 'Services/Post/Category';\r\n\r\n// Actions\r\nimport {setHeaderMenu, updateDocument, updateBreadcrumbStructure} from '../store';\r\n\r\n// Utils\r\nimport Constant from 'Config/constant';\r\nimport {handleError} from 'Libs/utils';\r\n\r\nconst PATH = 'application/pages/category.jsx';\r\nconst POST_PER_PAGE = 20;\r\n\r\nclass Category extends React.Component {\r\n    static async getInitialProps({reduxStore, query}) {\r\n        try {\r\n            let states = reduxStore.getState();\r\n            let og = {};\r\n            let slug = '';\r\n            let category = {};\r\n            let cid = '';\r\n            let total = 1;\r\n            let currentPage = Math.abs(+query.page) || 1;\r\n\r\n            let menus = [];\r\n            let topFeaturePosts = [];\r\n            let posts = [];\r\n            let featurePostsByWeek = [];\r\n            let images = [];\r\n\r\n            // Validate slug\r\n            if (query && query.slug && query.cid) {\r\n                slug = query.slug;\r\n                cid = query.cid;\r\n\r\n                const path = slug;\r\n                const url = Constant.SITE_URL + path + '-c' + cid + '.html';\r\n                const mobileUrl = Constant.MOBILE_SITE_URL + path + '-c' + cid + '.html';\r\n\r\n                // Update document metadata\r\n                reduxStore.dispatch(updateDocument({\r\n                    canonical: url,\r\n                    alternate: mobileUrl\r\n                }));\r\n\r\n                try {\r\n                    let getPosts = PostCategoryService.getList({\r\n                        slug: slug,\r\n                        limit: POST_PER_PAGE,\r\n                        page: currentPage\r\n                    });\r\n\r\n                    if (getPosts) {\r\n                        const response = await getPosts;\r\n\r\n                        if (response && response.data && response.data.data && response.data.data.posts) {\r\n                            posts = response.data.data.posts;\r\n                            total = +response.data.data.total || 1;\r\n\r\n                            if (posts.length) {\r\n                                posts.map((post, key) => {\r\n                                    // Add to feature posts\r\n                                    if (key < 3) {\r\n                                        topFeaturePosts.push(post);\r\n                                    }\r\n\r\n                                    let image = '';\r\n\r\n                                    // Validate images for header metadata\r\n                                    if (post.background) {\r\n                                        image = post.background;\r\n                                    } else if (post.images && post.images.normal) {\r\n                                        image = post.images.normal;\r\n                                    }\r\n\r\n                                    if (image && image.indexOf('https:') < 0) {\r\n                                        return 'https:' + image;\r\n                                    }\r\n\r\n                                    images.push(image);\r\n                                });\r\n\r\n                                // Filter 3 posts for feature\r\n                                posts = posts.filter((value, index) => index >= 3);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // Find active category\r\n                    if (states && states.headerMenu) {\r\n                        const headerMenu = states.headerMenu;\r\n\r\n                        headerMenu.map((menu) => {\r\n                            // Update header menu active\r\n                            menu.active = menu.id === +cid;\r\n\r\n                            if (menu.id === +cid) {\r\n                                // Set menus info\r\n                                menus = menu;\r\n\r\n                                // Active category\r\n                                category = menu;\r\n                            } else if (menu.child) {\r\n                                menu.child.map((childMenu) => {\r\n                                    if (childMenu.id === +cid) {\r\n                                        // Set menus info\r\n                                        menus = menu;\r\n\r\n                                        // Active category\r\n                                        category = childMenu;\r\n                                    }\r\n                                });\r\n                            }\r\n                        });\r\n\r\n                        reduxStore.dispatch(setHeaderMenu(headerMenu));\r\n\r\n                        // Update document metadata\r\n                        if (category && category.id) {\r\n                            const title = category.name + ' - ' + states.document.defaultTitle;\r\n\r\n                            reduxStore.dispatch(updateDocument({\r\n                                title: title,\r\n                                og: {\r\n                                    ...og,\r\n                                    title: title,\r\n                                    description: states.document.defaultDescription,\r\n                                    images: images,\r\n                                    url: url\r\n                                }\r\n                            }));\r\n\r\n                            // Update Breadcrumb structured data\r\n                            const breadcrumbItems = [\r\n                                {\r\n                                    '@type': 'ListItem',\r\n                                    'position': 1,\r\n                                    'item': {\r\n                                        '@id': Constant.SITE_URL,\r\n                                        'name': 'Tin tá»©c'\r\n                                    }\r\n                                },\r\n                                {\r\n                                    '@type': 'ListItem',\r\n                                    'position': 2,\r\n                                    'item': {\r\n                                        '@id': url,\r\n                                        'name': title\r\n                                    }\r\n                                }\r\n                            ];\r\n\r\n                            reduxStore.dispatch(updateBreadcrumbStructure({\r\n                                itemListElement: breadcrumbItems\r\n                            }));\r\n                        }\r\n                    }\r\n\r\n                    // Sidebar top posts\r\n                    let getTopPosts = PostCategoryService.getList({\r\n                        slug: slug,\r\n                        type: 'top',\r\n                        time: 'weekly'\r\n                    });\r\n\r\n                    if (getTopPosts) {\r\n                        const response = await getTopPosts;\r\n\r\n                        if (response && response.data && response.data.data && response.data.data.posts) {\r\n                            featurePostsByWeek = response.data.data.posts;\r\n                        }\r\n                    }\r\n                } catch (error) {\r\n                    //Error\r\n                    handleError(new Error('Category slug not found'), {\r\n                        actionName: 'getInitialProps',\r\n                        path: PATH,\r\n                        args: {}\r\n                    });\r\n                }\r\n            }\r\n\r\n            return {cid, category, menus, topFeaturePosts, posts, currentPage, total, featurePostsByWeek};\r\n        } catch (error) {\r\n            // Error\r\n            handleError(error, {\r\n                actionName: 'getInitialProps',\r\n                path: PATH,\r\n                args: {}\r\n            });\r\n        }\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n\r\n        this.myRef = React.createRef();\r\n    }\r\n\r\n    renderSubMenu = () => {\r\n        try {\r\n            const {menus = {}, cid} = this.props;\r\n\r\n            let arrMenus = [\r\n                {\r\n                    id: menus.id,\r\n                    name: menus.name,\r\n                    slug: menus.slug,\r\n                    active: menus.id === +cid\r\n                }\r\n            ];\r\n\r\n            if (menus.child && menus.child.length) {\r\n                arrMenus = arrMenus.concat(menus.child);\r\n            }\r\n\r\n            if (arrMenus && arrMenus.length) {\r\n                return (\r\n                    <ul>\r\n                        {\r\n                            arrMenus.map((menu) => {\r\n                                if (menu.id) {\r\n                                    return (\r\n                                        <li key={menu.id} className={classname({'active': menu.id === +cid})}>\r\n                                            <Link href={'/category-by-id?slug=' + menu.slug + '&cid=' + menu.id} as={'/' + menu.slug + '-c' + menu.id + '.html'}>\r\n                                                <a title={menu.name}>{menu.name}</a>\r\n                                            </Link>\r\n                                        </li>\r\n                                    );\r\n                                }\r\n                            })\r\n                        }\r\n                    </ul>\r\n                );\r\n            }\r\n        } catch (error) {\r\n            handleError(error, {\r\n                actionName: 'renderSubMenu',\r\n                path: PATH,\r\n                args: {}\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {cid, category, topFeaturePosts = [], posts = [], featurePostsByWeek = [], currentPage = 1} = this.props;\r\n        const href = category && category.slug ? Constant.SITE_URL + category.slug + '-c' + cid + '.html' : '';\r\n\r\n        try {\r\n            return (\r\n                <Fragment>\r\n                    <div ref={this.myRef} className=\"container\">\r\n                        <div className=\"sub-navbar\">\r\n                            <div className={classname('clearfix w1040')}>\r\n                                {\r\n                                    this.renderSubMenu()\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <div className={classname('container-body clearfix w1040')}>\r\n                            <div className={classname('clearfix w1040')}>\r\n                                <div className={classname('container-left fl w720')}>\r\n                                    <FeaturedWidget\r\n                                        className=\"mt-20\"\r\n                                        skeletonLoading={!topFeaturePosts.length}\r\n                                        posts={topFeaturePosts}\r\n                                    />\r\n\r\n                                    {\r\n                                        posts.length ? (\r\n                                            <HorizontalWidget\r\n                                                skeletonLoading={false}\r\n                                                background={'medium'}\r\n                                                number={100}\r\n                                                posts={posts}\r\n                                            />\r\n                                        ) : null\r\n                                    }\r\n\r\n                                    <div className={classname('pb-20')}>\r\n                                        <Pagination\r\n                                            href={href}\r\n                                            currentPage={currentPage}\r\n                                            pageSize={POST_PER_PAGE}\r\n                                            total={this.props.total}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className={classname('container-right col-sticky fr mt-20 w300')}>\r\n                                    <SidebarNewsWidget\r\n                                        skeletonLoading={!featurePostsByWeek.length}\r\n                                        title=\"Máº¹o hay tuáº§n qua\"\r\n                                        className=\"col-sticky sidebar-widget-news\"\r\n                                        background={'medium'}\r\n                                        posts={featurePostsByWeek}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Fragment>\r\n            );\r\n        } catch (error) {\r\n            handleError(error, {\r\n                actionName: 'render',\r\n                path: PATH,\r\n                args: {}\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport default withRouter(Category);\r\n"]},"metadata":{},"sourceType":"module"}