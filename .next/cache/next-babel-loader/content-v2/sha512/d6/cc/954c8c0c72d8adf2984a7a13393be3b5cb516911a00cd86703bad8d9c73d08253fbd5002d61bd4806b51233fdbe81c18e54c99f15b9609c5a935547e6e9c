{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport moment from 'moment';\nimport constant from 'Config/constant';\nexport const formatTime = (time, format = 'YYYY-MM-DD HH:mm:ss') => {\n  try {\n    // 07/03/2020 21:34:30 => 3 seconds ago\n    // 07/03/2020 21:34:30 => 3 minutes, 15 seconds ago\n    // 07/03/2020 21:34:30 => 3 hours ago\n    // 07/03/2020 10:34:30 => >24h => 07/03/2020 10:34:30\n    if (time) {\n      let seconds = moment().diff(moment(time, format), 'seconds');\n\n      if (seconds && +seconds > 0) {\n        if (seconds < 60) {\n          return {\n            duration: seconds,\n            type: 'second',\n            string: '1 phút trước'\n          };\n        } else {\n          let minutes = Math.round(seconds / 60);\n\n          if (minutes > 60) {\n            // Hours\n            let hours = Math.round(minutes / 60);\n\n            if (hours > 24) {\n              return {\n                duration: Math.round(hours / 24),\n                type: 'day',\n                string: moment(time).format('HH:mm | DD/MM')\n              };\n            } else {\n              let string = hours + ' giờ trước';\n              return {\n                duration: hours,\n                type: 'hour',\n                string: string\n              };\n            }\n          } else {\n            let string = minutes + ' phút trước';\n            return {\n              duration: minutes,\n              type: 'minute',\n              string: string\n            };\n          }\n        }\n      }\n    }\n  } catch (error) {// Error\n  }\n};\nexport const quoteDoubleToSingle = message => {\n  return message.replace(/\"/g, '\\'');\n};\nexport function handleError(error, payload) {\n  try {\n    if (process.env.ENV === 'development') {\n      console.error('handleError', error);\n    } // Send error log\n\n    /*const monitor = require('@antscorp/monitor-javascript');\r\n      monitor.init({\r\n        pid: 1592307059795,\r\n        env: process.env.ENV,\r\n        host: 'http://monitor.tuoitreplus.com/api/monitor/error/'\r\n    });\r\n      monitor.handleError(error, {\r\n        traceId: '',\r\n        ...payload\r\n    });*/\n\n  } catch (e) {// Error\n  }\n}\nexport function mapSearchAndParam(value, direction = constant.SEARCH_TO_QUERY) {\n  if (direction === constant.SEARCH_TO_QUERY) {\n    return value.replace(/\\s/g, '+');\n  } else {\n    return value.replace('+', /\\s/g);\n  }\n}\nexport function getObjectPropSafely(fn, defaultValue = '') {\n  try {\n    return fn();\n  } catch (e) {\n    return defaultValue;\n  }\n}\nexport const getPostImage = (post, background = 'large') => {\n  try {\n    if (post && background) {\n      if (background === 'large' && post.background) {\n        return post.background;\n      } else if (post.images && post.images[background]) {\n        return post.images[background];\n      } else if (post.background) {\n        return post.background;\n      }\n    }\n  } catch (error) {// Error\n  }\n};\nexport const gtagInject = gaId => {\n  try {\n    if (gaId) {\n      const gaScript = document.createElement('script');\n      const googleAnalyticsSource = `https://www.googletagmanager.com/gtag/js?id=${gaId}`;\n      const s0 = document.getElementsByTagName('script')[0];\n      gaScript.async = true;\n      gaScript.setAttribute('src', googleAnalyticsSource);\n      s0.parentNode.insertBefore(gaScript, s0);\n\n      if (true) {\n        return;\n      }\n\n      window.dataLayer = window.dataLayer || [];\n      gtagTrackingEvent('js', new Date());\n      gtagTrackingEvent('config', gaId);\n    }\n  } catch (error) {// Error\n  }\n};\nexport const gtagTrackingEvent = (eventCategory, eventAction, args) => {\n  try {\n    // eslint-disable-next-line no-inner-declarations\n    function tracking() {\n      try {\n        window.dataLayer.push(arguments);\n      } catch (error) {// Error\n      }\n    }\n\n    let params = _objectSpread({}, args);\n\n    if (params && Object.keys(params).length && eventCategory !== 'js') {\n      tracking(eventCategory, eventAction, params);\n    } else {\n      tracking(eventCategory, eventAction);\n    }\n  } catch (error) {// Error\n  }\n};","map":{"version":3,"sources":["E:/meovathay/application/libs/utils.js"],"names":["moment","constant","formatTime","time","format","seconds","diff","duration","type","string","minutes","Math","round","hours","error","quoteDoubleToSingle","message","replace","handleError","payload","process","env","ENV","console","e","mapSearchAndParam","value","direction","SEARCH_TO_QUERY","getObjectPropSafely","fn","defaultValue","getPostImage","post","background","images","gtagInject","gaId","gaScript","document","createElement","googleAnalyticsSource","s0","getElementsByTagName","async","setAttribute","parentNode","insertBefore","window","dataLayer","gtagTrackingEvent","Date","eventCategory","eventAction","args","tracking","push","arguments","params","Object","keys","length"],"mappings":"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","sourcesContent":["import moment from 'moment';\r\nimport constant from 'Config/constant';\r\n\r\nexport const formatTime = (time, format = 'YYYY-MM-DD HH:mm:ss') => {\r\n    try {\r\n        // 07/03/2020 21:34:30 => 3 seconds ago\r\n        // 07/03/2020 21:34:30 => 3 minutes, 15 seconds ago\r\n        // 07/03/2020 21:34:30 => 3 hours ago\r\n        // 07/03/2020 10:34:30 => >24h => 07/03/2020 10:34:30\r\n\r\n        if (time) {\r\n            let seconds = moment().diff(moment(time, format), 'seconds');\r\n\r\n            if (seconds && +seconds > 0) {\r\n                if (seconds < 60) {\r\n                    return {\r\n                        duration: seconds,\r\n                        type: 'second',\r\n                        string: '1 phút trước'\r\n                    };\r\n                } else {\r\n                    let minutes = Math.round(seconds / 60);\r\n\r\n                    if (minutes > 60) {\r\n                        // Hours\r\n                        let hours = Math.round(minutes / 60);\r\n\r\n                        if (hours > 24) {\r\n                            return {\r\n                                duration: Math.round(hours / 24),\r\n                                type: 'day',\r\n                                string: moment(time).format('HH:mm | DD/MM')\r\n                            };\r\n                        } else {\r\n                            let string = hours + ' giờ trước';\r\n\r\n                            return {\r\n                                duration: hours,\r\n                                type: 'hour',\r\n                                string: string\r\n                            };\r\n                        }\r\n                    } else {\r\n                        let string = minutes + ' phút trước';\r\n\r\n                        return {\r\n                            duration: minutes,\r\n                            type: 'minute',\r\n                            string: string\r\n                        };\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    } catch (error) {\r\n        // Error\r\n    }\r\n};\r\n\r\nexport const quoteDoubleToSingle = (message) => {\r\n    return message.replace(/\"/g, '\\'');\r\n};\r\n\r\nexport function handleError(error, payload) {\r\n    try {\r\n        if (process.env.ENV === 'development') {\r\n            console.error('handleError', error);\r\n        }\r\n\r\n        // Send error log\r\n        /*const monitor = require('@antscorp/monitor-javascript');\r\n\r\n        monitor.init({\r\n            pid: 1592307059795,\r\n            env: process.env.ENV,\r\n            host: 'http://monitor.tuoitreplus.com/api/monitor/error/'\r\n        });\r\n\r\n        monitor.handleError(error, {\r\n            traceId: '',\r\n            ...payload\r\n        });*/\r\n\r\n    } catch (e) {\r\n        // Error\r\n    }\r\n}\r\n\r\nexport function mapSearchAndParam(value, direction = constant.SEARCH_TO_QUERY) {\r\n    if (direction === constant.SEARCH_TO_QUERY) {\r\n        return value.replace(/\\s/g, '+');\r\n    } else {\r\n        return value.replace('+', /\\s/g);\r\n    }\r\n}\r\n\r\nexport function getObjectPropSafely(fn, defaultValue = '') {\r\n    try {\r\n        return fn();\r\n    } catch (e) {\r\n        return defaultValue;\r\n    }\r\n}\r\n\r\nexport const getPostImage = (post, background = 'large') => {\r\n    try {\r\n        if (post && background) {\r\n            if (background === 'large' && post.background) {\r\n                return post.background;\r\n            } else if (post.images && post.images[background]) {\r\n                return post.images[background];\r\n            } else if (post.background) {\r\n                return post.background;\r\n            }\r\n        }\r\n    } catch (error) {\r\n        // Error\r\n    }\r\n};\r\n\r\nexport const gtagInject = (gaId) => {\r\n    try {\r\n        if (gaId) {\r\n            const gaScript = document.createElement('script');\r\n\r\n            const googleAnalyticsSource = `https://www.googletagmanager.com/gtag/js?id=${gaId}`;\r\n            const s0 = document.getElementsByTagName('script')[0];\r\n\r\n            gaScript.async = true;\r\n            gaScript.setAttribute('src', googleAnalyticsSource);\r\n            s0.parentNode.insertBefore(gaScript, s0);\r\n\r\n            if (typeof window === 'undefined') {\r\n                return;\r\n            }\r\n\r\n            window.dataLayer = window.dataLayer || [];\r\n            gtagTrackingEvent('js', new Date());\r\n            gtagTrackingEvent('config', gaId);\r\n        }\r\n\r\n    } catch (error) {\r\n        // Error\r\n    }\r\n};\r\n\r\nexport const gtagTrackingEvent = (eventCategory, eventAction, args) => {\r\n    try {\r\n        // eslint-disable-next-line no-inner-declarations\r\n        function tracking() {\r\n            try {\r\n                window.dataLayer.push(arguments);\r\n            } catch (error) {\r\n                // Error\r\n            }\r\n        }\r\n\r\n        let params = {\r\n            ...args\r\n        };\r\n\r\n        if (params && Object.keys(params).length && eventCategory !== 'js') {\r\n            tracking(eventCategory, eventAction, params);\r\n        } else {\r\n            tracking(eventCategory, eventAction);\r\n        }\r\n    } catch (error) {\r\n        // Error\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}