{"ast":null,"code":"import axios from 'axios';\naxios.interceptors.request.use(function (config) {\n  //console.log('config', config)\n  return config;\n});\nexport const services = {\n  get: function get(params) {\n    if (typeof params.API_HOST !== 'undefined' && typeof params.id !== 'undefined') {\n      const API_HOST = params.API_HOST;\n      delete params.API_HOST;\n      return axios.get(API_HOST + '/' + params.id, {\n        params: params\n      });\n    } else {\n      return false;\n    }\n  },\n  getList: function getList(params) {\n    if (typeof params.API_HOST !== 'undefined') {\n      const API_HOST = params.API_HOST;\n      delete params.API_HOST;\n      return axios.get(API_HOST, {\n        params: params\n      });\n    } else {\n      return false;\n    }\n  },\n  create: function create(params) {\n    if (params.API_HOST !== 'undefined') {\n      const API_HOST = params.API_HOST;\n      delete params.API_HOST;\n      return axios.post(API_HOST, params);\n    } else {\n      return false;\n    }\n  },\n  update: function update(params) {\n    if (typeof params.API_HOST !== 'undefined' && typeof params.id !== 'undefined') {\n      const API_HOST = params.API_HOST;\n      delete params.API_HOST;\n      return axios.put(API_HOST + '/' + params.id, params);\n    } else {\n      return false;\n    }\n  },\n  del: function del(params) {\n    if (typeof params.API_HOST !== 'undefined' && typeof params.id !== 'undefined') {\n      const API_HOST = params.API_HOST;\n      delete params.API_HOST;\n      return axios.delete(API_HOST + '/' + params.id, {\n        params: params\n      });\n    } else {\n      return false;\n    }\n  }\n};","map":{"version":3,"sources":["E:/meovathay/application/services/services.js"],"names":["axios","interceptors","request","use","config","services","get","params","API_HOST","id","getList","create","post","update","put","del","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEAA,KAAK,CAACC,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAA+B,UAAUC,MAAV,EAAkB;AAC7C;AAEA,SAAOA,MAAP;AACH,CAJD;AAMA,OAAO,MAAMC,QAAQ,GAAG;AACpBC,EAAAA,GAAG,EAAE,SAASA,GAAT,CAAaC,MAAb,EAAqB;AACtB,QAAI,OAAOA,MAAM,CAACC,QAAd,KAA2B,WAA3B,IAA0C,OAAOD,MAAM,CAACE,EAAd,KAAqB,WAAnE,EAAgF;AAC5E,YAAMD,QAAQ,GAAGD,MAAM,CAACC,QAAxB;AAEA,aAAOD,MAAM,CAACC,QAAd;AAEA,aAAOR,KAAK,CAACM,GAAN,CAAUE,QAAQ,GAAG,GAAX,GAAiBD,MAAM,CAACE,EAAlC,EAAsC;AACzCF,QAAAA,MAAM,EAAEA;AADiC,OAAtC,CAAP;AAGH,KARD,MAQO;AACH,aAAO,KAAP;AACH;AACJ,GAbmB;AAcpBG,EAAAA,OAAO,EAAE,SAASA,OAAT,CAAiBH,MAAjB,EAAyB;AAC9B,QAAI,OAAOA,MAAM,CAACC,QAAd,KAA2B,WAA/B,EAA4C;AACxC,YAAMA,QAAQ,GAAGD,MAAM,CAACC,QAAxB;AAEA,aAAOD,MAAM,CAACC,QAAd;AAEA,aAAOR,KAAK,CAACM,GAAN,CAAUE,QAAV,EAAoB;AACvBD,QAAAA,MAAM,EAAEA;AADe,OAApB,CAAP;AAGH,KARD,MAQO;AACH,aAAO,KAAP;AACH;AACJ,GA1BmB;AA2BpBI,EAAAA,MAAM,EAAE,SAASA,MAAT,CAAgBJ,MAAhB,EAAwB;AAC5B,QAAIA,MAAM,CAACC,QAAP,KAAoB,WAAxB,EAAqC;AACjC,YAAMA,QAAQ,GAAGD,MAAM,CAACC,QAAxB;AAEA,aAAOD,MAAM,CAACC,QAAd;AAEA,aAAOR,KAAK,CAACY,IAAN,CAAWJ,QAAX,EAAqBD,MAArB,CAAP;AACH,KAND,MAMO;AACH,aAAO,KAAP;AACH;AACJ,GArCmB;AAsCpBM,EAAAA,MAAM,EAAE,SAASA,MAAT,CAAgBN,MAAhB,EAAwB;AAC5B,QAAI,OAAOA,MAAM,CAACC,QAAd,KAA2B,WAA3B,IAA0C,OAAOD,MAAM,CAACE,EAAd,KAAqB,WAAnE,EAAgF;AAC5E,YAAMD,QAAQ,GAAGD,MAAM,CAACC,QAAxB;AAEA,aAAOD,MAAM,CAACC,QAAd;AAEA,aAAOR,KAAK,CAACc,GAAN,CAAUN,QAAQ,GAAG,GAAX,GAAiBD,MAAM,CAACE,EAAlC,EAAsCF,MAAtC,CAAP;AACH,KAND,MAMO;AACH,aAAO,KAAP;AACH;AACJ,GAhDmB;AAiDpBQ,EAAAA,GAAG,EAAE,SAASA,GAAT,CAAaR,MAAb,EAAqB;AACtB,QAAI,OAAOA,MAAM,CAACC,QAAd,KAA2B,WAA3B,IAA0C,OAAOD,MAAM,CAACE,EAAd,KAAqB,WAAnE,EAAgF;AAC5E,YAAMD,QAAQ,GAAGD,MAAM,CAACC,QAAxB;AAEA,aAAOD,MAAM,CAACC,QAAd;AAEA,aAAOR,KAAK,CAACgB,MAAN,CAAaR,QAAQ,GAAG,GAAX,GAAiBD,MAAM,CAACE,EAArC,EAAyC;AAC5CF,QAAAA,MAAM,EAAEA;AADoC,OAAzC,CAAP;AAGH,KARD,MAQO;AACH,aAAO,KAAP;AACH;AACJ;AA7DmB,CAAjB","sourcesContent":["import axios from 'axios';\r\n\r\naxios.interceptors.request.use(function (config) {\r\n    //console.log('config', config)\r\n\r\n    return config;\r\n});\r\n\r\nexport const services = {\r\n    get: function get(params) {\r\n        if (typeof params.API_HOST !== 'undefined' && typeof params.id !== 'undefined') {\r\n            const API_HOST = params.API_HOST;\r\n\r\n            delete params.API_HOST;\r\n\r\n            return axios.get(API_HOST + '/' + params.id, {\r\n                params: params\r\n            });\r\n        } else {\r\n            return false;\r\n        }\r\n    },\r\n    getList: function getList(params) {\r\n        if (typeof params.API_HOST !== 'undefined') {\r\n            const API_HOST = params.API_HOST;\r\n\r\n            delete params.API_HOST;\r\n\r\n            return axios.get(API_HOST, {\r\n                params: params\r\n            });\r\n        } else {\r\n            return false;\r\n        }\r\n    },\r\n    create: function create(params) {\r\n        if (params.API_HOST !== 'undefined') {\r\n            const API_HOST = params.API_HOST;\r\n\r\n            delete params.API_HOST;\r\n\r\n            return axios.post(API_HOST, params);\r\n        } else {\r\n            return false;\r\n        }\r\n    },\r\n    update: function update(params) {\r\n        if (typeof params.API_HOST !== 'undefined' && typeof params.id !== 'undefined') {\r\n            const API_HOST = params.API_HOST;\r\n\r\n            delete params.API_HOST;\r\n\r\n            return axios.put(API_HOST + '/' + params.id, params);\r\n        } else {\r\n            return false;\r\n        }\r\n    },\r\n    del: function del(params) {\r\n        if (typeof params.API_HOST !== 'undefined' && typeof params.id !== 'undefined') {\r\n            const API_HOST = params.API_HOST;\r\n\r\n            delete params.API_HOST;\r\n\r\n            return axios.delete(API_HOST + '/' + params.id, {\r\n                params: params\r\n            });\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}