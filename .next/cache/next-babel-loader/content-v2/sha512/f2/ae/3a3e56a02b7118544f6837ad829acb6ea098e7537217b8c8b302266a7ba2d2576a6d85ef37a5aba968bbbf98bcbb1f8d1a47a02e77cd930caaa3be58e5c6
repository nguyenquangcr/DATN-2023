{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nvar _jsxFileName = \"E:\\\\meovathay\\\\application\\\\libs\\\\with-redux-store.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { initializeStore } from '../store';\nconst isServer = true;\nconst __NEXT_REDUX_STORE__ = '__NEXT_REDUX_STORE__';\n\nfunction getOrCreateStore(initialState) {\n  // Always make a new store if server, otherwise state is shared between requests\n  if (isServer) {\n    return initializeStore(initialState);\n  } // Create store if unavailable on the client and set it on the window object\n\n\n  if (!window[__NEXT_REDUX_STORE__]) {\n    window[__NEXT_REDUX_STORE__] = initializeStore(initialState);\n  }\n\n  return window[__NEXT_REDUX_STORE__];\n}\n\nexport default (App => {\n  return class AppWithRedux extends React.Component {\n    static getInitialProps(appContext) {\n      return _asyncToGenerator(function* () {\n        // Get or Create the store with `undefined` as initialState\n        // This allows you to set a custom default initialState\n        const reduxStore = getOrCreateStore(); // Provide the store to getInitialProps of pages\n\n        appContext.ctx.reduxStore = reduxStore;\n        let appProps = {};\n\n        if (typeof App.getInitialProps === 'function') {\n          appProps = yield App.getInitialProps(appContext);\n        }\n\n        return _objectSpread(_objectSpread({}, appProps), {}, {\n          initialReduxState: reduxStore.getState()\n        });\n      })();\n    }\n\n    constructor(props) {\n      super(props);\n      this.reduxStore = getOrCreateStore(props.initialReduxState);\n    }\n\n    render() {\n      return __jsx(App, _extends({}, this.props, {\n        reduxStore: this.reduxStore,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 20\n        }\n      }));\n    }\n\n  };\n});","map":{"version":3,"sources":["E:/meovathay/application/libs/with-redux-store.js"],"names":["React","initializeStore","isServer","__NEXT_REDUX_STORE__","getOrCreateStore","initialState","window","App","AppWithRedux","Component","getInitialProps","appContext","reduxStore","ctx","appProps","initialReduxState","getState","constructor","props","render"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,eAAR,QAA8B,UAA9B;AAEA,MAAMC,QAAQ,OAAd;AACA,MAAMC,oBAAoB,GAAG,sBAA7B;;AAEA,SAASC,gBAAT,CAA0BC,YAA1B,EAAwC;AACpC;AACA,MAAIH,QAAJ,EAAc;AACV,WAAOD,eAAe,CAACI,YAAD,CAAtB;AACH,GAJmC,CAMpC;;;AACA,MAAI,CAACC,MAAM,CAACH,oBAAD,CAAX,EAAmC;AAC/BG,IAAAA,MAAM,CAACH,oBAAD,CAAN,GAA+BF,eAAe,CAACI,YAAD,CAA9C;AACH;;AACD,SAAOC,MAAM,CAACH,oBAAD,CAAb;AACH;;AAED,gBAAeI,GAAG,IAAI;AAClB,SAAO,MAAMC,YAAN,SAA2BR,KAAK,CAACS,SAAjC,CAA2C;AAC9C,WAAaC,eAAb,CAA6BC,UAA7B,EAAyC;AAAA;AACrC;AACA;AACA,cAAMC,UAAU,GAAGR,gBAAgB,EAAnC,CAHqC,CAKrC;;AACAO,QAAAA,UAAU,CAACE,GAAX,CAAeD,UAAf,GAA4BA,UAA5B;AAEA,YAAIE,QAAQ,GAAG,EAAf;;AAEA,YAAI,OAAOP,GAAG,CAACG,eAAX,KAA+B,UAAnC,EAA+C;AAC3CI,UAAAA,QAAQ,SAASP,GAAG,CAACG,eAAJ,CAAoBC,UAApB,CAAjB;AACH;;AAED,+CACOG,QADP;AAEIC,UAAAA,iBAAiB,EAAEH,UAAU,CAACI,QAAX;AAFvB;AAdqC;AAkBxC;;AAEDC,IAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,YAAMA,KAAN;AACA,WAAKN,UAAL,GAAkBR,gBAAgB,CAACc,KAAK,CAACH,iBAAP,CAAlC;AACH;;AAEDI,IAAAA,MAAM,GAAG;AACL,aAAO,MAAC,GAAD,eAAS,KAAKD,KAAd;AAAqB,QAAA,UAAU,EAAE,KAAKN,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACH;;AA5B6C,GAAlD;AA8BH,CA/BD","sourcesContent":["import React from 'react';\r\nimport {initializeStore} from '../store';\r\n\r\nconst isServer = typeof window === 'undefined';\r\nconst __NEXT_REDUX_STORE__ = '__NEXT_REDUX_STORE__';\r\n\r\nfunction getOrCreateStore(initialState) {\r\n    // Always make a new store if server, otherwise state is shared between requests\r\n    if (isServer) {\r\n        return initializeStore(initialState);\r\n    }\r\n\r\n    // Create store if unavailable on the client and set it on the window object\r\n    if (!window[__NEXT_REDUX_STORE__]) {\r\n        window[__NEXT_REDUX_STORE__] = initializeStore(initialState);\r\n    }\r\n    return window[__NEXT_REDUX_STORE__];\r\n}\r\n\r\nexport default App => {\r\n    return class AppWithRedux extends React.Component {\r\n        static async getInitialProps(appContext) {\r\n            // Get or Create the store with `undefined` as initialState\r\n            // This allows you to set a custom default initialState\r\n            const reduxStore = getOrCreateStore();\r\n\r\n            // Provide the store to getInitialProps of pages\r\n            appContext.ctx.reduxStore = reduxStore;\r\n\r\n            let appProps = {};\r\n\r\n            if (typeof App.getInitialProps === 'function') {\r\n                appProps = await App.getInitialProps(appContext);\r\n            }\r\n\r\n            return {\r\n                ...appProps,\r\n                initialReduxState: reduxStore.getState()\r\n            };\r\n        }\r\n\r\n        constructor(props) {\r\n            super(props);\r\n            this.reduxStore = getOrCreateStore(props.initialReduxState);\r\n        }\r\n\r\n        render() {\r\n            return <App {...this.props} reduxStore={this.reduxStore} />;\r\n        }\r\n    };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}